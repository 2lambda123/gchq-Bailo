version: '3.9'
services:
  mongo:
    image: mongo:6.0.4
    command: [--replSet, repl-set, --bind_ip_all, --port, '27017', --quiet]
    volumes:
      - mongoVolume:/data/db
    ports:
      - 27017:27017
    healthcheck:
      test:
        test $$(mongosh --port 27017 --quiet --eval "try
        {rs.initiate({_id:'repl-set',members:[{_id:0,host:\"mongo:27017\"}]})} catch(e) {rs.status().ok}") -eq 1
      interval: 10s
      start_period: 30s

  minio:
    image: minio/minio:RELEASE.2023-01-31T02-24-19Z
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - minioVolume:/data
    command: server /data --console-address ":9001"

  clamd:
    image: clamav/clamav:1.3

  mailcrab:
    image: marlonb/mailcrab:v0.10.0
    ports:
      - 1080:1080
      - 1025:1025

  nginx:
    image: nginx:1.21.6-alpine
    volumes:
      - ./infrastructure/nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 8080:8080
    depends_on:
      - frontend
      - backend
      - registry

  registry:
    restart: always
    image: registry:2.8.1
    ports:
      - 5000:5000
    environment:
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/cert.pem
      REGISTRY_HTTP_TLS_KEY: /certs/key.pem

      REGISTRY_STORAGE_S3_ACCESSKEY: minioadmin
      REGISTRY_STORAGE_S3_SECRETKEY: minioadmin

      REGISTRY_AUTH: token
      REGISTRY_AUTH_TOKEN_REALM: http://backend:3001/api/v1/registry_auth
      REGISTRY_AUTH_TOKEN_SERVICE: RegistryAuth
      REGISTRY_AUTH_TOKEN_ISSUER: RegistryIssuer
      REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/cert.pem
    volumes:
      - ./backend/config/registry.conf:/etc/docker/registry/config.yml
      - ./backend/certs:/certs

  frontend:
    build:
      context: ./frontend/
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    ports:
      - 3000:3000

  backend:
    build:
      context: ./backend/
      dockerfile: ./Dockerfile.dev
    volumes:
      - ./backend:/app
      - ./backend/certs:/certs
      - ./backend/certs:/usr/local/share/ca-certificates
    ports:
      - 3001:3001
      - 9229:9229
    depends_on:
      - mongo
      - minio
      - clamd
    security_opt:
      - seccomp:unconfined
      - apparmor:unconfined
    environment:
      - NODE_CONFIG_ENV=docker_compose
  webhook-tester:
    image: tarampampam/webhook-tester
    command: serve --port 8082 --create-session 00000000-0000-0000-0000-000000000000
    ports: ['8082:8082/tcp'] # Open <http://127.0.0.1:8080/#/00000000-0000-0000-0000-000000000000>

volumes:
  minioVolume:
  mongoVolume:
