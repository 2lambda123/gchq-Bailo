apiVersion: v1
kind: ServiceAccount
metadata:
  name: bailo-builder
  namespace: bailo
  labels:
    {{- include "bailo.labels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: bailo-builder
rules:
- apiGroups: ["build.openshift.io"]
  resources: ["buildconfigs"]
  verbs: ["create", "delete", "get", "list"]
- apiGroups: ["build.openshift.io"]
  resources: ["buildconfigs/instantiatebinary"]
  verbs: ["create"]
- apiGroups: ["build.openshift.io"]
  resources: ["builds/log"]
  verbs: ["get"]
- apiGroups: ["build.openshift.io"]
  resources: ["builds"]
  verbs: ["get"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "create", "list"]  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: bailo-builder
subjects:
- kind: ServiceAccount
  name: bailo-builder
  namespace: bailo
roleRef:
  kind: Role
  name: bailo-builder
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.smtp.host }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Values.smtp.host }}
  template:
    metadata:
      labels:
        name: {{ .Values.smtp.host }}
    spec:
      containers:
      - name: {{ .Values.smtp.host }}
        image: {{ .Values.smtp.repository }}:{{ .Values.smtp.tag }}
        ports:
            - name: http
              containerPort: 8888
              protocol: TCP
            - name: smtp
              containerPort: {{ .Values.smtp.port }}
              protocol: TCP
        env:
        - name: MAILDEV_INCOMING_USER
          value: "mailuser"
        - name: MAILDEV_INCOMING_PASS
          value: "mailpass"
        - name: MAILDEV_SMTP_PORT
          value: "{{ .Values.smtp.port }}"
        - name: MAILDEV_WEB_PORT
          value: "8888" 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.registry.host }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Values.registry.host }}
  template:
    metadata:
      labels:
        name: {{ .Values.registry.host }}
    spec:
      containers:
      - name: {{ .Values.registry.host }}
        image: {{ .Values.registry.repository }}:{{ .Values.registry.tag }}
        ports:
            - name: http
              containerPort: {{ .Values.registry.port }}
              protocol: TCP
        env:
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          value: {{ .Values.registry.certDir }}/{{ .Values.registry.certFile }}
        - name: REGISTRY_HTTP_TLS_KEY
          value: {{ .Values.registry.certDir }}/{{ .Values.registry.keyFile }}
        - name: REGISTRY_STORAGE_S3_ACCESSKEY
          valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-minio
                  key: root-user
        - name: REGISTRY_STORAGE_S3_SECRETKEY
          valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-minio
                  key: root-password
        - name: REGISTRY_AUTH
          value: "token"
        - name: REGISTRY_AUTH_TOKEN_REALM
          value: "http://{{ .Chart.Name }}:{{ .Values.service.port }}/api/v1/registry_auth"
        - name: REGISTRY_AUTH_TOKEN_SERVICE
          value: "RegistryAuth"
        - name: REGISTRY_AUTH_TOKEN_ISSUER
          value: "RegistryIssuer"
        - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
          value: {{ .Values.registry.certDir }}/{{ .Values.registry.certFile }}
        volumeMounts:
        - name: config-map-vol
          mountPath: /etc/docker/registry/config.yml
          subPath: config.yml
        - name: certs
          mountPath: {{ .Values.registry.certDir }}
      volumes:
      - name: config-map-vol    
        configMap:
          name: {{ include "bailo.fullname" . }}
          items:
          - key: registry.conf
            path: config.yml
      - name: certs
        secret:
          secretName: {{ include "bailo.fullname" . }}
          items:
            - key: cert.pem
              path: {{ .Values.registry.certFile }}
            - key: key.pem
              path: {{ .Values.registry.keyFile }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.nginx.host }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Values.nginx.host }}
  template:
    metadata:
      labels:
        name: {{ .Values.nginx.host }}
    spec:
      containers:
      - name: {{ .Values.nginx.host }}
        securityContext:
            readOnlyRootFilesystem: false
        image: {{ .Values.nginx.repository }}:{{ .Values.nginx.tag }}
        ports:
            - name: http
              containerPort: {{ .Values.nginx.port }}
              protocol: TCP
        volumeMounts:
        - name: config-map-vol
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: certs
          mountPath: {{ .Values.nginx.certDir }}
      volumes:
      - name: config-map-vol    
        configMap:
          name: {{ include "bailo.fullname" . }}
      - name: certs
        secret:
          secretName: {{ include "bailo.fullname" . }}
          items:
            - key: cert.pem
              path: {{ .Values.nginx.certFile }}
            - key: key.pem
              path: {{ .Values.nginx.keyFile }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bailo.fullname" . }}
  labels:
    {{- include "bailo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bailo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bailo.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: bailo-builder
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          #command: ["/bin/sh"]
          #args: ["-c", "sleep 99999"]
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-minio
                  key: root-user
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-minio
                  key: root-password
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-redis
                  key: redis-password
            - name: REDIS_CONNECTION_URI
              value: {{ include "bailo.redisConnectionURI" . | quote }}
            - name: MONGO_PASSWORD
              valueFrom: 
                secretKeyRef:
                  name: {{ include "bailo.fullname" . }}-mongodb
                  key: mongodb-passwords
            - name: MONGO_CONNECTION_URI
              value: {{ include "bailo.mongoConnectionURI" . | quote }}
            - name: SCHEMA_SETUP_SCRIPT
              value: dist/server/scripts/exampleSetAllSchemas.js
            - name: OPENSHIFT
              value: "True"
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/config/production.js
              subPath: production.js
            - name: config
              mountPath: /app/config/custom-environment-variables.js
              subPath: custom-environment-variables.js
            - name: certs
              mountPath: /app/certs
            - name: temp
              mountPath: /tmp
            - name: cache
              mountPath: /app/.next/cache
            - name: certs
              mountPath: /usr/local/share/ca-certificates/bailo.pem
              subPath: cert.pem
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "bailo.fullname" . }}
            items:
              - key: production.js
                path: production.js
              - key: custom-environment-variables.js
                path: custom-environment-variables.js
        - name: certs
          secret:
            secretName: {{ include "bailo.fullname" . }}
            items:
              - key: cert.pem
                path: cert.pem
              - key: key.pem
                path: key.pem
        - name: temp
          emptyDir: {}
        - name: cache
          emptyDir: {}
