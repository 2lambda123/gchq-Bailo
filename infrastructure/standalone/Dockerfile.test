FROM ubuntu:jammy

RUN apt update

ENV DEBIAN_FRONTEND=noninteractive

RUN apt install git curl wget gnupg ca-certificates iproute2 nginx vim -y

RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - &&\
    apt install nodejs -y

ENV MINIO_ROOT_USER=minioaccesskey
ENV MINIO_ROOT_PASSWORD=minioaccesskey
#ENV MINIO_ACCESS_KEY=minioaccesskey
#ENV MINIO_SECRET_KEY=miniosecretkey
VOLUME minio-data
RUN wget https://dl.min.io/server/minio/release/linux-amd64/minio &&\
    chmod +x minio &&\
    mv minio /usr/local/bin/

RUN wget -qO - https://pgp.mongodb.com/server-6.0.asc |  gpg --dearmor -o /etc/apt/trusted.gpg.d/mongodb-6.0.gpg &&\
    echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/6.0 multiverse" |  tee /etc/apt/sources.list.d/mongodb-org-6.0.list &&\
    apt update &&\
    apt install mongodb-org -y

COPY <<EOF /etc/nginx/nginx.conf
# An example Nginx configuration

pid /tmp/nginx.pid;
worker_processes 1;
events { worker_connections 1024; }

http {
    upstream frontend_service {
       server localhost:3000;
    }

    upstream backend_service {
       server localhost:3001;
    }

    upstream registry_service {
       server localhost:5000;
    }

    sendfile on;

    map $upstream_http_www_authenticate $new_www_authenticate {
        ~(?<pre_auth>.*realm=")(.*?)(?<post_auth>\/api\/v1\/registry_auth".*)   "$pre_auth$scheme://$host:$server_port$post_auth";
        default "";
    }

    server {
        listen 8080;

        location / {
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 0;
            chunked_transfer_encoding on;

            proxy_pass http://frontend_service;
        }

        location /api {
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 0;
            chunked_transfer_encoding on;

            proxy_pass http://backend_service;
        }

        location /docs/python {
            proxy_http_version 1.1;
            proxy_cache_bypass $http_upgrade;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            client_max_body_size 0;
            chunked_transfer_encoding on;

            proxy_pass http://backend_service;
        }


        location /v2 {
            proxy_hide_header WWW-Authenticate;
            add_header WWW-Authenticate $new_www_authenticate always;

            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_read_timeout 900;

            client_max_body_size 0;
            chunked_transfer_encoding on;

            proxy_pass         https://registry_service;
        }
    }
}
EOF

RUN wget https://github.com/distribution/distribution/releases/download/v2.8.3/registry_2.8.3_linux_amd64.tar.gz &&\
    tar -xvf registry_2.8.3_linux_amd64.tar.gz &&\
    mv registry /usr/local/bin/
ENV REGISTRY_HTTP_TLS_CERTIFICATE: /Bailo/backend/certs/cert.pem
ENV REGISTRY_HTTP_TLS_KEY: /Bailo/backend/certs/key.pem
ENV REGISTRY_STORAGE_S3_ACCESSKEY: minioaccesskey
ENV REGISTRY_STORAGE_S3_SECRETKEY: miniosecretkey
ENV REGISTRY_AUTH: token
ENV REGISTRY_AUTH_TOKEN_REALM: http://localhost:3001/api/v1/registry_auth
ENV REGISTRY_AUTH_TOKEN_SERVICE: RegistryAuth
ENV REGISTRY_AUTH_TOKEN_ISSUER: RegistryIssuer
ENV REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /Bailo/backend/certs/cert.pem
COPY <<EOF /registry.conf
version: 0.1
log:
fields:
service: registry
storage:
cache:
blobdescriptor: inmemory
s3:
regionendpoint: http://localhost:9000
bucket: registry
secure: false
region: ignored-for-minio
redirect:
disable: true
delete:
enabled: true
maintenance:
uploadpurging:
  enabled: true
  age: 168h
  interval: 24h
  dryrun: false
readonly:
  enabled: false
http:
addr: :5000
relativeurls: true
headers:
X-Content-Type-Options: [nosniff]
health:
storagedriver:
enabled: true
interval: 10s
threshold: 3
EOF

RUN wget https://github.com/tweedegolf/mailcrab/releases/download/v1.2.0/mailcrab-linux-x86-64-gnu-v1.2.0 &&\
    chmod +x mailcrab-linux-x86-64-gnu-v1.2.0 &&\
    mv mailcrab-linux-x86-64-gnu-v1.2.0 /usr/local/bin/mailcrab

RUN git clone https://github.com/gchq/Bailo.git
WORKDIR /Bailo
RUN npm run certs &&\
    npm install
WORKDIR /Bailo/backend
RUN npm run build
WORKDIR /Bailo/frontend
RUN npm run build

WORKDIR /

EXPOSE 8080

CMD minio server /minio-data; mongod; nginx; registry serve registry.conf; mailcrab; node /Bailo/backend/src/index.js; node /Bailo/fronend/server.js