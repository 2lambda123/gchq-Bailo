Search.setIndex({"docnames": ["bailo.core", "bailo.helper", "index", "notebooks/access_requests_demo", "notebooks/experiment_tracking_demo", "notebooks/models_and_releases_demo_pytorch", "notebooks/schemas_demo", "pre-commit-config", "pylint", "pyproject", "readme_link"], "filenames": ["bailo.core.rst", "bailo.helper.rst", "index.rst", "notebooks/access_requests_demo.ipynb", "notebooks/experiment_tracking_demo.ipynb", "notebooks/models_and_releases_demo_pytorch.ipynb", "notebooks/schemas_demo.ipynb", "pre-commit-config.md", "pylint.md", "pyproject.md", "readme_link.md"], "titles": ["bailo.core package", "bailo.helper package", "Welcome to Bailo\u2019s Python Client documentation!", "Managing Access Requests", "Experiment Tracking with Bailo &amp; MLFlow", "Managing Models &amp; Releases (ResNet-50 Example with PyTorch)", "Managing Schemas", "pre-commit-config.yaml", "A comma-separated list of package or module names from where C extensions may", "pypyroject.toml", "Bailo Python Client"], "terms": {"The": [0, 1, 3, 4, 5, 6, 7, 9, 10], "contain": [0, 4, 5, 9], "suppport": 0, "one": [0, 4, 5], "endpoint": [0, 3, 5, 6], "It": [0, 9], "i": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10], "recommend": 0, "us": [0, 1, 4, 7, 9, 10], "helper": [0, 2, 3, 5, 6], "most": [0, 4], "class": [0, 1, 3, 4, 5, 6], "agent": [0, 2, 3, 5, 6], "sourc": [0, 1], "base": [0, 1], "object": [0, 1, 3, 4, 5, 6], "api": [0, 10], "talk": 0, "wrap": 0, "each": [0, 5], "request": [0, 1, 2], "an": [0, 1], "except": 0, "handler": 0, "map": 0, "error": [0, 1, 5], "python": [0, 3, 5, 6, 7, 9], "among": 0, "statu": 0, "code": [0, 5, 7], "less": 0, "than": 0, "400": 0, "default": [0, 1, 3, 5, 6, 10], "timeout": [], "5": [1, 4, 6, 8], "second": [], "delet": [0, 1], "arg": [0, 8], "kwarg": 0, "get": [0, 1, 2], "patch": 0, "post": [0, 1], "push": 0, "put": 0, "pkiagent": [0, 2, 3, 5, 6], "cert": [0, 3, 5, 6], "str": [0, 1, 4], "kei": [0, 2, 3, 5, 6], "auth": [0, 3, 5, 6], "__init__": [0, 1], "initi": [0, 5], "pki": [0, 3, 5, 6], "authent": [0, 3, 5, 6], "paramet": [0, 1, 3, 4, 5, 6], "path": [0, 1, 5], "file": [0, 1, 5, 9, 10], "certif": 0, "author": 0, "tokenag": [0, 2], "access_kei": 0, "secret_kei": 0, "token": 0, "access": [0, 1, 2, 4], "secret": 0, "client": [0, 1, 3, 5, 6], "url": [0, 3, 4, 5, 6], "creat": [0, 1, 7, 10], "can": [0, 1, 3, 4, 5, 6, 7, 10], "websit": 0, "handl": [0, 3, 5, 6], "delete_access_request": 0, "model_id": [0, 1, 3, 5], "access_request_id": [0, 1, 3], "specif": [0, 1, 5], "associ": 0, "model": [0, 1, 2, 3, 4, 6, 10], "uniqu": [0, 1, 6], "id": [0, 1, 4], "return": [0, 1, 5, 6], "json": [0, 1, 6], "respons": [0, 1, 5], "delete_fil": 0, "file_id": 0, "delete_releas": 0, "release_vers": 0, "releas": [0, 1, 2, 4, 10], "version": [0, 1, 5, 10], "get_access_request": 0, "retriev": [0, 1], "given": [0, 1, 10], "its": 0, "all": [0, 1, 5, 10], "get_all_imag": 0, "imag": [0, 1, 5], "A": [0, 1, 3, 4, 5, 6, 10], "get_all_releas": 0, "get_all_schema": 0, "kind": [0, 1, 4, 6], "schemakind": [0, 1, 2, 4, 6], "none": [0, 1], "schema": [0, 1, 2, 5], "enum": [0, 1], "defin": [0, 4], "e": [0, 1, 3, 5, 6, 10], "g": [0, 1, 3, 5, 6], "accessrequest": [0, 1, 2, 3], "get_all_team": 0, "team": [0, 1], "get_download_by_filenam": 0, "semver": [0, 1], "filenam": [0, 1, 5], "download": [0, 1, 10], "try": 0, "from": [0, 1, 3, 6, 7, 10], "get_download_fil": 0, "": [0, 1], "get_fil": 0, "get_model": 0, "get_model_card": 0, "card": [0, 1, 4], "get_model_rol": 0, "role": [0, 1, 2], "get_model_user_rol": 0, "current": [0, 1, 9], "user": [0, 1, 3, 7], "task": 0, "librari": [0, 5], "list": [0, 1], "filter": 0, "search": 0, "find": [0, 6], "provid": [0, 1, 2, 4], "term": 0, "classif": [0, 5], "tensorflow": 0, "custom": [0, 5], "string": [0, 1, 6], "locat": [0, 1, 4], "get_releas": [0, 1, 5], "get_review": 0, "activ": 0, "bool": [0, 1, 8], "review": [0, 1], "within": [0, 1, 2, 3, 4, 5, 6, 10], "boolean": 0, "repres": [0, 1, 5], "get_schema": 0, "schema_id": [0, 1, 3, 4, 5, 6], "get_team": 0, "team_id": [0, 1, 3, 4, 5, 10], "get_user_team": 0, "model_card_from_schema": 0, "patch_access_request": 0, "metadata": [0, 1, 3], "ani": [0, 1, 3, 4, 5, 6], "updat": [0, 1, 3], "patch_model": 0, "name": [0, 1, 3, 4, 5, 6, 10], "descript": [0, 1, 3, 4, 5, 6, 10], "visibl": [0, 1, 5], "public": [0, 1], "privat": [0, 1], "patch_team": 0, "post_access_request": 0, "post_model": 0, "modelvis": [0, 1, 2], "post_releas": 0, "note": [0, 1, 4, 5, 6, 10], "model_card_vers": [0, 1, 5], "int": [0, 1, 8], "minor": [0, 1, 5], "fals": [0, 1, 6], "draft": [0, 1, 6], "new": [0, 1, 10], "signifi": 0, "post_review": 0, "decis": 0, "comment": 0, "semant": [0, 1], "make": [0, 1, 5, 10], "either": [0, 1, 5, 10], "approv": 0, "chang": [0, 1, 5], "go": 0, "post_schema": 0, "json_schema": [0, 1, 4, 6], "dict": [0, 1], "post_team": 0, "put_model_card": 0, "latest": [0, 1, 5], "put_releas": 0, "simple_upload": 0, "buffer": 0, "bytesio": [0, 1, 5], "simpl": [0, 10], "upload": [0, 1, 10], "valu": [0, 1], "whether": [0, 1], "publicli": 0, "model_senior_responsible_offic": 0, "msro": 0, "model_technical_review": 0, "mtr": 0, "owner": 0, "type": [0, 5, 6], "access_request": [0, 1, 3], "bailoexcept": [0, 2], "gener": [0, 3, 5, 6, 7, 10], "responseexcept": [0, 2], "gave": 0, "created_bi": 1, "being": 1, "made": 1, "thi": [1, 2, 3, 4, 5, 6, 9, 10], "ha": 1, "been": [1, 4], "classmethod": [1, 3, 5, 6, 8], "interact": [1, 2, 3, 5, 6], "messag": [1, 5], "confirm": 1, "remov": 1, "from_id": 1, "exist": [1, 3], "state": 1, "experi": [1, 2], "local": [1, 3, 4, 5, 6], "which": [1, 3, 4, 5, 6, 7], "run": [1, 3, 5, 6, 10], "raw": 1, "inform": [1, 3, 5, 6], "about": 1, "create_experi": [1, 4], "x": [1, 4], "rang": [1, 4], "start_run": [1, 4], "log_param": [1, 4], "lr": [1, 4], "0": [1, 3, 4, 5, 6, 10], "01": [1, 3, 4], "insert": [1, 3, 4, 5, 6], "train": [1, 4], "here": [1, 10], "log_metr": [1, 4], "accuraci": [1, 4], "86": [1, 4], "log_artifact": [1, 4], "weight": [1, 4], "pth": [1, 5], "publish": [1, 9], "mc_loc": [1, 4], "perform": [1, 4, 7], "performancemetr": [1, 4], "run_id": [1, 4], "1": [1, 3, 4, 5, 6, 10], "from_mlflow": [1, 4], "tracking_uri": [1, 4], "experiment_id": [1, 4], "import": [1, 3, 5, 6, 10], "mlflow": [1, 2], "track": [1, 2], "server": [1, 4], "uri": [1, 4], "rais": 1, "importerror": 1, "instal": [1, 2, 4, 5], "artifact": [1, 4], "log": [1, 4], "log_dataset": 1, "dataset": 1, "arbitrari": [1, 4], "titl": [1, 6], "metric": [1, 4], "dictionari": 1, "param": [1, 4], "result": 1, "select": [1, 5], "present": 1, "next": [1, 4, 5], "depend": [1, 4, 7], "is_mlflow": 1, "start": [1, 2], "mark": 1, "card_from_model": 1, "copi": 1, "differ": [1, 5], "yet": 1, "implement": 1, "notimplementederror": 1, "Not": 1, "card_from_schema": [1, 4, 5, 10], "card_from_templ": 1, "templat": 1, "build": [1, 7, 9], "create_releas": [1, 5, 10], "true": [1, 6], "call": [1, 3, 5], "method": [1, 4], "get_card_latest": 1, "get_card_revis": 1, "revis": 1, "get_imag": 1, "refer": 1, "get_latest_releas": [1, 5], "from_vers": 1, "get_rol": 1, "get_user_rol": 1, "summari": [1, 6], "update_model_card": [1, 4, 5], "model_card": [1, 4, 5], "If": [1, 4, 5, 10], "attribut": [1, 3, 5], "option": [1, 9], "ar": [1, 3, 4, 5, 6, 7, 9, 10], "store": 1, "write": [1, 5], "give": 1, "read": 1, "determin": 1, "disk": [1, 5], "set": [1, 5], "data": 1, "directori": [1, 10], "load": 1, "zip": 1, "ecosystem": 2, "manag": 2, "lifecycl": [2, 4], "machin": [2, 4], "learn": [2, 4, 5], "support": [2, 3, 4, 5, 6], "featur": 2, "develop": 2, "core": [2, 3, 4, 5, 6], "resnet": 2, "50": [2, 8], "exampl": [2, 3, 4, 6, 9], "pytorch": 2, "bailo": [3, 6], "enabl": [3, 5, 6], "intuit": [3, 5, 6], "servic": [3, 4, 5, 6], "environ": [3, 4, 5, 6], "notebook": [3, 4, 5, 6], "through": [3, 4, 5, 6], "follow": [3, 4, 5, 6, 10], "concept": [3, 4, 5, 6], "prerequisit": [3, 4, 5, 6], "3": [3, 4, 5, 6, 10], "8": [3, 4, 5, 6, 8, 10], "higher": [3, 4, 5, 6, 10], "includ": [3, 4, 5, 6, 7, 9], "demo": [3, 4, 5, 6], "remot": [3, 4, 5, 6], "see": [3, 4, 5, 6], "http": [3, 4, 5, 6, 8, 10], "github": [3, 4, 5, 6], "com": [3, 4, 5, 6], "gchq": [3, 4, 5, 6], "split": [3, 5, 6, 10], "two": [3, 5, 6], "sub": [3, 5, 6], "packag": [3, 5, 6, 7, 9], "For": [3, 5, 6], "direct": [3, 5, 6], "more": [3, 4, 5, 6], "oper": [3, 5, 6], "In": [3, 4, 5, 6, 7, 10], "order": [3, 4, 5, 6, 10], "you": [3, 4, 5, 6, 10], "first": [3, 4, 5, 6], "need": [3, 4, 5, 6], "instanti": [3, 4, 5, 6], "By": [3, 5, 6], "howev": [3, 5, 6], "also": [3, 4, 5, 6, 9], "pass": [3, 5, 6], "when": [3, 5, 6, 9], "necessari": [3, 4, 5, 6], "statement": [3, 4, 5, 6], "127": [3, 4, 5, 6], "8080": [3, 4, 5, 6, 10], "host": [3, 4, 5, 6], "section": [3, 4, 5, 6, 10], "we": [3, 4, 5, 6], "ll": [3, 4, 5, 6], "On": [3, 5, 6], "must": [3, 4, 5, 6], "consist": [3, 5, 6], "least": [3, 5], "upon": [3, 5, 6], "creation": [3, 5, 6], "These": [3, 5, 6, 7], "below": [3, 5, 6], "befor": [3, 4, 5, 6], "our": [3, 4, 5, 6], "yolov5": [3, 4], "detect": [3, 4], "uncategoris": [3, 4, 5, 10], "overview": [3, 4, 5, 6], "entiti": 3, "test": [3, 6, 9], "enddat": 3, "1970": 3, "minim": [3, 5, 10], "v10": [3, 5, 10], "previou": [3, 4, 5, 6], "your": [3, 4, 5, 6], "edit": 3, "directli": [3, 4, 5], "demonstr": [3, 4, 5], "new_metadata": 3, "newnam": 3, "simpli": 3, "addit": 4, "cover": 4, "offer": 4, "integr": [4, 5, 10], "might": 4, "wider": 4, "particular": 4, "complet": 4, "basic": [4, 8], "models_and_releases_demo_pytorch": 4, "ipynb": 4, "step": [4, 5], "have": [4, 5], "thu": 4, "too": [4, 5, 6], "how": [4, 5], "do": [4, 5, 6], "time": [4, 5], "later": [4, 5], "pip": [4, 5, 10], "random": [4, 6], "element": 4, "tutori": 4, "instanc": [4, 5, 6], "sampl": 4, "actual": 4, "onli": [4, 7, 9, 10], "function": [4, 6], "ui": 4, "command": [4, 5], "line": 4, "typic": [4, 6], "localhost": [4, 10], "5000": [4, 6], "browser": 4, "design": [4, 8], "displai": [4, 5], "wai": 4, "therefor": 4, "extern": 4, "script": 4, "quit": 4, "larg": 4, "set_schema": 4, "py": [4, 8, 9], "assign": [4, 5], "randint": 4, "1000000": 4, "mandatori": 4, "field": 4, "new_card": [4, 5], "tag": [4, 5, 6], "modelsummari": [4, 5], "work": [4, 10], "sequenti": 4, "so": 4, "re": [4, 5], "parallel": 4, "would": [4, 6], "better": 4, "anchor_t": 4, "4": [4, 5], "scale": 4, "98": 4, "txt": [4, 5], "2": [4, 5], "set_tracking_uri": 4, "set_experi": 4, "demonst": 4, "same": [4, 5], "set_tag": 4, "info": 4, "As": 4, "previous": 4, "mention": 4, "experiment_mlflow": 4, "BE": 4, "found": 4, "ON": 4, "THE": 4, "becaus": 4, "intend": 4, "success": [4, 5], "specifi": 4, "well": 4, "case": [4, 5], "per": 4, "earlier": [4, 5], "should": [4, 5], "now": [4, 5], "under": 4, "tab": 4, "addition": 4, "relev": 5, "linux": 5, "cpu": 5, "torch": [5, 8], "torchvis": 5, "index": 5, "org": [5, 6], "whl": 5, "mac": 5, "window": [5, 10], "resnet50": 5, "resnet50_weight": 5, "other": [5, 6, 10], "like": 5, "ad": 5, "backend": [5, 10], "mai": [5, 9, 10], "relai": 5, "empti": 5, "beta": [5, 10], "out": 5, "scope": 5, "print": 5, "f": [5, 10], "abov": 5, "want": 5, "match": 5, "otherwis": 5, "thrown": 5, "adjust": 5, "don": 5, "t": 5, "drastic": 5, "behaviour": 5, "separ": 5, "itself": 5, "release_on": 5, "save": 5, "them": 5, "take": 5, "allow": 5, "u": 5, "without": 5, "up": 5, "space": 5, "torch_model": 5, "state_dict": 5, "To": 5, "content": [5, 10], "last": 5, "s3": 5, "large_fil": 5, "open": [5, 10], "rb": 5, "altern": 5, "both": [5, 9], "release_latest": 5, "successfulli": 5, "ident": 5, "similarli": 5, "bailo_resnet50_weight": 5, "wb": 5, "final": 5, "ve": 5, "load_state_dict": 5, "init": 5, "identifi": 6, "suffic": 6, "reserv": 6, "administr": 6, "def": 6, "random_gener": 6, "n": [6, 8], "10": 6, "join": 6, "choic": [6, 8], "ascii_uppercas": 6, "digit": 6, "k": [6, 8], "07": 6, "properti": 6, "modeloverview": 6, "what": 6, "doe": 6, "minlength": 6, "maxlength": 6, "searchabl": 6, "help": [6, 7], "arrai": 6, "widget": 6, "tagselectorbeta": 6, "item": 6, "uniqueitem": 6, "requir": [6, 9, 10], "additionalproperti": 6, "git": [7, 10], "hook": [7, 8], "scan": 7, "prior": 7, "checkin": 7, "configur": [7, 9], "focus": 7, "action": 7, "prevent": 7, "fail": 7, "dure": 7, "format": 7, "automat": 7, "auto": 7, "black": 7, "sort": 7, "isort": 7, "lint": [7, 9], "left": 7, "discret": 7, "master": 8, "pkg": 8, "whitelist": 8, "numpi": 8, "cv2": 8, "pyodbc": 8, "pydant": 8, "ciso8601": 8, "netcdf4": 8, "scipi": 8, "cv": 8, "conftest": 8, "setrecursionlimit": 8, "getrecursionlimit": 8, "job": 8, "100": 8, "persist": 8, "ye": 8, "rcfile": 8, "mode": 8, "unsaf": 8, "float": 8, "_": 8, "msg": 8, "max": 8, "exit": 8, "snake_cas": 8, "rgx": 8, "foo": 8, "bar": 8, "baz": 8, "toto": 8, "tutu": 8, "tata": 8, "pascalcas": 8, "upper_cas": 8, "min": 8, "j": 8, "ex": 8, "df": 8, "ax": 8, "group": 8, "long": 8, "after": 8, "paren": 8, "120": 8, "1000": 8, "stmt": 8, "miscellan": 8, "fixm": 8, "xxx": 8, "todo": 8, "9": 8, "jump": 8, "typecheck": 8, "np": 8, "pyspark": 8, "sql": 8, "collect_list": 8, "optpars": 8, "thread": 8, "_local": 8, "_thread": 8, "swagger_cli": 8, "mutat": 8, "dbutil": 8, "cb_": 8, "_cb": 8, "za": 8, "z0": 8, "9_": 8, "unused_": 8, "six": 8, "move": 8, "past": 8, "futur": [8, 9], "io": 8, "setup": [8, 9], "post_init": 8, "_asdict": 8, "_field": 8, "_replac": 8, "_sourc": 8, "_make": 8, "cl": 8, "7": 8, "expr": 8, "12": 8, "15": 8, "20": 8, "6": 8, "tkinter": 8, "tix": 8, "ext": 8, "known": 8, "azureiai": 8, "logist": 8, "inventoryplan": 8, "overgener": 8, "pyproject": 9, "main": 9, "project": 9, "replac": 9, "flit": 9, "poetri": 9, "consid": 9, "viabl": 9, "setuptool": 9, "cfg": 9, "still": 9, "wrapper": 10, "tabl": 10, "binari": 10, "yolo": 10, "yolov4": 10, "look": 10, "onc": 10, "my_releas": 10, "onnx": 10, "documen": 10, "render": 10, "sphinx": 10, "serv": 10, "doc": 10, "html": 10, "bat": 10, "alreadi": 10, "prompt": 10, "overwrit": 10, "huski": 10, "instruct": 10, "cli": 10, "pre": 10, "commit": 10, "pytest": 10, "ran": 10, "accordingli": 10, "categori": 10, "autom": 10, "purpos": 10, "sure": 10, "m": 10}, "objects": {"": [[2, 0, 0, "-", "bailo"]], "bailo.core": [[0, 0, 0, "-", "agent"], [0, 0, 0, "-", "client"], [0, 0, 0, "-", "enums"], [0, 0, 0, "-", "exceptions"]], "bailo.core.agent": [[0, 1, 1, "", "Agent"], [0, 1, 1, "", "PkiAgent"], [0, 1, 1, "", "TokenAgent"]], "bailo.core.agent.Agent": [[0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "push"], [0, 2, 1, "", "put"]], "bailo.core.agent.PkiAgent": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "put"]], "bailo.core.agent.TokenAgent": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "put"]], "bailo.core.client": [[0, 1, 1, "", "Client"]], "bailo.core.client.Client": [[0, 2, 1, "", "delete_access_request"], [0, 2, 1, "", "delete_file"], [0, 2, 1, "", "delete_release"], [0, 2, 1, "", "get_access_request"], [0, 2, 1, "", "get_access_requests"], [0, 2, 1, "", "get_all_images"], [0, 2, 1, "", "get_all_releases"], [0, 2, 1, "", "get_all_schemas"], [0, 2, 1, "", "get_all_teams"], [0, 2, 1, "", "get_download_by_filename"], [0, 2, 1, "", "get_download_file"], [0, 2, 1, "", "get_files"], [0, 2, 1, "", "get_model"], [0, 2, 1, "", "get_model_card"], [0, 2, 1, "", "get_model_roles"], [0, 2, 1, "", "get_model_user_roles"], [0, 2, 1, "", "get_models"], [0, 2, 1, "", "get_release"], [0, 2, 1, "", "get_reviews"], [0, 2, 1, "", "get_schema"], [0, 2, 1, "", "get_team"], [0, 2, 1, "", "get_user_teams"], [0, 2, 1, "", "model_card_from_schema"], [0, 2, 1, "", "patch_access_request"], [0, 2, 1, "", "patch_model"], [0, 2, 1, "", "patch_team"], [0, 2, 1, "", "post_access_request"], [0, 2, 1, "", "post_model"], [0, 2, 1, "", "post_release"], [0, 2, 1, "", "post_review"], [0, 2, 1, "", "post_schema"], [0, 2, 1, "", "post_team"], [0, 2, 1, "", "put_model_card"], [0, 2, 1, "", "put_release"], [0, 2, 1, "", "simple_upload"]], "bailo.core.enums": [[0, 1, 1, "", "ModelVisibility"], [0, 1, 1, "", "Role"], [0, 1, 1, "", "SchemaKind"]], "bailo.core.enums.ModelVisibility": [[0, 3, 1, "", "PRIVATE"], [0, 3, 1, "", "PUBLIC"]], "bailo.core.enums.Role": [[0, 3, 1, "", "MODEL_SENIOR_RESPONSIBLE_OFFICER"], [0, 3, 1, "", "MODEL_TECHNICAL_REVIEWER"], [0, 3, 1, "", "OWNER"]], "bailo.core.enums.SchemaKind": [[0, 3, 1, "", "ACCESS_REQUEST"], [0, 3, 1, "", "MODEL"]], "bailo.core.exceptions": [[0, 4, 1, "", "BailoException"], [0, 4, 1, "", "ResponseException"]], "bailo.helper": [[1, 0, 0, "-", "access_request"], [1, 0, 0, "-", "model"], [1, 0, 0, "-", "release"], [1, 0, 0, "-", "schema"]], "bailo.helper.access_request": [[1, 1, 1, "", "AccessRequest"]], "bailo.helper.access_request.AccessRequest": [[1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "update"]], "bailo.helper.model": [[1, 1, 1, "", "Experiment"], [1, 1, 1, "", "Model"]], "bailo.helper.model.Experiment": [[1, 2, 1, "", "create"], [1, 2, 1, "", "from_mlflow"], [1, 2, 1, "", "log_artifacts"], [1, 2, 1, "", "log_dataset"], [1, 2, 1, "", "log_metrics"], [1, 2, 1, "", "log_params"], [1, 2, 1, "", "publish"], [1, 2, 1, "", "start_run"]], "bailo.helper.model.Model": [[1, 2, 1, "", "card_from_model"], [1, 2, 1, "", "card_from_schema"], [1, 2, 1, "", "card_from_template"], [1, 2, 1, "", "create"], [1, 2, 1, "", "create_experiment"], [1, 2, 1, "", "create_release"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "get_card_latest"], [1, 2, 1, "", "get_card_revision"], [1, 2, 1, "", "get_image"], [1, 2, 1, "", "get_images"], [1, 2, 1, "", "get_latest_release"], [1, 2, 1, "", "get_release"], [1, 2, 1, "", "get_releases"], [1, 2, 1, "", "get_roles"], [1, 2, 1, "", "get_user_roles"], [1, 2, 1, "", "update"], [1, 2, 1, "", "update_model_card"]], "bailo.helper.release": [[1, 1, 1, "", "Release"]], "bailo.helper.release.Release": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "download"], [1, 2, 1, "", "from_version"], [1, 2, 1, "", "update"], [1, 2, 1, "", "upload"]], "bailo.helper.schema": [[1, 1, 1, "", "Schema"]], "bailo.helper.schema.Schema": [[1, 2, 1, "", "create"], [1, 2, 1, "", "from_id"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"bailo": [0, 1, 2, 4, 5, 10], "core": 0, "packag": [0, 1, 2, 8, 10], "helper": 1, "welcom": 2, "": [2, 8], "python": [2, 4, 8, 10], "client": [2, 4, 10], "document": [2, 10], "notebook": 2, "manag": [3, 5, 6, 8], "access": [3, 8], "request": 3, "introduct": [3, 4, 5, 6], "creat": [3, 4, 5, 6, 8], "new": [3, 4, 5, 6, 8], "retriev": [3, 5, 6], "an": [3, 4, 5, 6, 8], "us": [3, 5, 6, 8], "from_id": [3, 5, 6], "method": [3, 5, 6, 8], "make": [3, 8], "chang": [3, 8], "delet": 3, "experi": 4, "track": 4, "mlflow": 4, "connect": 4, "set": [4, 8], "up": [4, 8], "prepar": [4, 5], "custom": 4, "schema": [4, 6], "conduct": 4, "run": [4, 8], "dummi": [4, 8], "import": [4, 8], "exist": [4, 5, 6, 8], "from": [4, 5, 8], "publish": 4, "result": [4, 8], "model": 5, "releas": 5, "resnet": 5, "50": 5, "exampl": [5, 8], "pytorch": 5, "updat": 5, "base": [5, 8], "popul": 5, "card": 5, "weight": 5, "upload": 5, "download": 5, "load": [5, 8], "pre": 7, "commit": 7, "config": 7, "yaml": 7, "A": 8, "comma": 8, "separ": 8, "list": 8, "modul": 8, "name": 8, "where": 8, "c": 8, "extens": 8, "mai": 8, "ar": 8, "activ": 8, "interpret": 8, "arbitrari": 8, "code": 8, "add": [8, 10], "file": 8, "directori": 8, "blacklist": 8, "thei": 8, "should": 8, "path": 8, "match": 8, "regex": 8, "pattern": 8, "The": 8, "against": 8, "execut": 8, "usual": 8, "sy": 8, "manipul": 8, "pygtk": 8, "requir": 8, "multipl": 8, "process": 8, "speed": 8, "pylint": 8, "specifi": 8, "0": 8, "auto": 8, "detect": 8, "number": 8, "processor": 8, "avail": 8, "control": 8, "amount": 8, "potenti": 8, "infer": 8, "valu": 8, "when": 8, "singl": 8, "object": 8, "thi": 8, "can": 8, "help": 8, "perform": 8, "deal": 8, "larg": 8, "function": 8, "complex": 8, "nest": 8, "condit": 8, "plugin": 8, "regist": 8, "addit": 8, "checker": 8, "pickl": 8, "collect": 8, "data": 8, "later": 8, "comparison": 8, "configur": 8, "enabl": 8, "would": 8, "attempt": 8, "guess": 8, "common": 8, "misconfigur": 8, "emit": 8, "user": 8, "friendli": 8, "hint": 8, "instead": 8, "fals": 8, "posit": 8, "error": 8, "messag": 8, "allow": 8, "onli": 8, "show": 8, "warn": 8, "confid": 8, "level": 8, "leav": 8, "empti": 8, "all": 8, "valid": 8, "high": 8, "inference_failur": 8, "undefin": 8, "disabl": 8, "report": 8, "categori": 8, "given": 8, "id": 8, "you": 8, "either": 8, "give": 8, "identifi": 8, "put": 8, "option": 8, "time": 8, "command": 8, "line": 8, "appear": 8, "onc": 8, "also": 8, "everyth": 8, "first": 8, "reenabl": 8, "specif": 8, "check": 8, "For": 8, "want": 8, "similar": 8, "If": 8, "class": 8, "have": 8, "displai": 8, "w": 8, "see": 8, "express": 8, "which": 8, "return": 8, "score": 8, "less": 8, "than": 8, "equal": 8, "10": 8, "variabl": 8, "refactor": 8, "convent": 8, "contain": 8, "each": 8, "well": 8, "statement": 8, "i": 8, "total": 8, "analyz": 8, "global": 8, "evalu": 8, "rp0004": 8, "templat": 8, "style": 8, "format": 8, "string": 8, "inform": 8, "doc": 8, "detail": 8, "output": 8, "text": 8, "parseabl": 8, "color": 8, "json": 8, "msv": 8, "visual": 8, "studio": 8, "e": 8, "g": 8, "mypackag": 8, "mymodul": 8, "myreporterclass": 8, "tell": 8, "whether": 8, "full": 8, "maximum": 8, "block": 8, "bodi": 8, "complet": 8, "never": 8, "inconsist": 8, "call": 8, "consid": 8, "explicit": 8, "print": 8, "correct": 8, "argument": 8, "regular": 8, "overrid": 8, "attribut": 8, "attr": 8, "bad": 8, "alwai": 8, "refus": 8, "constant": 8, "const": 8, "minimum": 8, "length": 8, "docstr": 8, "shorter": 8, "ones": 8, "exempt": 8, "good": 8, "accept": 8, "includ": 8, "invalid": 8, "inlin": 8, "iter": 8, "inlinevar": 8, "colon": 8, "delimit": 8, "determin": 8, "other": 8, "sever": 8, "do": 8, "decor": 8, "produc": 8, "properti": 8, "abc": 8, "abstractproperti": 8, "These": 8, "taken": 8, "consider": 8, "expect": 8, "end": 8, "ani": 8, "lf": 8, "crlf": 8, "regexp": 8, "longer": 8, "limit": 8, "space": 8, "indent": 8, "insid": 8, "hang": 8, "continu": 8, "unit": 8, "4": 8, "t": 8, "1": 8, "tab": 8, "charact": 8, "construct": 8, "whitespac": 8, "dict": 8, "tabul": 8, "etc": 8, "n222": 8, "2": 8, "trail": 8, "between": 8, "close": 8, "bracket": 8, "same": 8, "declar": 8, "test": [8, 10], "els": 8, "log": 8, "old": 8, "mean": 8, "fstr": 8, "f": 8, "paramet": 8, "note": 8, "tag": 8, "take": 8, "ignor": 8, "comment": 8, "comput": 8, "count": 8, "suggest": 8, "spell": 8, "mistak": 8, "dictionari": 8, "none": 8, "To": 8, "work": 8, "instal": [8, 10], "enchant": 8, "word": 8, "privat": 8, "one": 8, "per": 8, "store": 8, "unknown": 8, "rais": 8, "flag": 8, "implicit": 8, "str": 8, "concat": 8, "sequenc": 8, "gener": 8, "concaten": 8, "defin": 8, "over": 8, "context": 8, "contextlib": 8, "contextmanag": 8, "member": 8, "dynam": 8, "miss": 8, "system": 8, "so": 8, "shouldn": 8, "trigger": 8, "e1101": 8, "mixin": 8, "its": 8, "case": 8, "insensit": 8, "about": 8, "owner": 8, "whenev": 8, "opaqu": 8, "while": 8, "some": 8, "branch": 8, "might": 8, "partial": 8, "In": 8, "still": 8, "rest": 8, "support": 8, "qualifi": 8, "project": 8, "namespac": 8, "dure": 8, "runtim": 8, "thu": 8, "cannot": 8, "deduc": 8, "static": 8, "analysi": 8, "It": 8, "unix": 8, "possibl": 8, "wa": 8, "found": 8, "aspect": 8, "find": 8, "edit": 8, "distanc": 8, "order": 8, "signatur": 8, "suppos": 8, "builtin": 8, "rememb": 8, "avoid": 8, "unus": 8, "treat": 8, "violat": 8, "callback": 8, "must": 8, "start": [8, 10], "those": 8, "default": 8, "lead": 8, "underscor": 8, "we": 8, "init": 8, "redefin": 8, "assign": 8, "instanc": 8, "exclud": 8, "protect": 8, "metaclass": 8, "r0902": 8, "boolean": 8, "r0916": 8, "local": [8, 10], "parent": 8, "r0901": 8, "public": 8, "r0904": 8, "yield": 8, "r0903": 8, "just": 8, "top": 8, "wildcard": 8, "analys": 8, "fallback": 8, "both": 8, "3": 8, "compat": 8, "anoth": 8, "deprec": 8, "graph": 8, "extern": 8, "depend": 8, "rp0402": 8, "everi": 8, "intern": 8, "forc": 8, "recogn": 8, "part": 8, "standard": 8, "librari": 8, "third": 8, "parti": 8, "coupl": 8, "prefer": 8, "except": 8, "being": 8, "caught": 8, "baseexcept": 8, "pypyroject": 9, "toml": 9, "kei": 10, "featur": 10, "get": 10, "build": 10, "develop": 10, "precommit": 10}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Managing Access Requests": [[3, "Managing-Access-Requests"]], "Introduction": [[3, "Introduction"], [6, "Introduction"], [4, "Introduction"], [5, "Introduction"]], "Creating a new access request": [[3, "Creating-a-new-access-request"]], "Retrieving an access request": [[3, "Retrieving-an-access-request"]], "Using the .from_id() method": [[3, "Using-the-.from_id()-method"], [6, "Using-the-.from_id()-method"], [5, "Using-the-.from_id()-method"]], "Making changes to an access request": [[3, "Making-changes-to-an-access-request"]], "Deleting an access request": [[3, "Deleting-an-access-request"]], "Managing Schemas": [[6, "Managing-Schemas"]], "Creating a new schema": [[6, "Creating-a-new-schema"]], "Retrieving an existing schema": [[6, "Retrieving-an-existing-schema"]], "pre-commit-config.yaml": [[7, "pre-commit-config-yaml"]], "A comma-separated list of package or module names from where C extensions may": [[8, "a-comma-separated-list-of-package-or-module-names-from-where-c-extensions-may"]], "be loaded. Extensions are loading into the active Python interpreter and may": [[8, "be-loaded-extensions-are-loading-into-the-active-python-interpreter-and-may"]], "run arbitrary code.": [[8, "run-arbitrary-code"]], "Add files or directories to the blacklist. They should be base names, not": [[8, "add-files-or-directories-to-the-blacklist-they-should-be-base-names-not"]], "paths.": [[8, "paths"]], "Add files or directories matching the regex patterns to the blacklist. The": [[8, "add-files-or-directories-matching-the-regex-patterns-to-the-blacklist-the"]], "regex matches against base names, not paths.": [[8, "regex-matches-against-base-names-not-paths"]], "Python code to execute, usually for sys.path manipulation such as": [[8, "python-code-to-execute-usually-for-sys-path-manipulation-such-as"]], "pygtk.require().": [[8, "pygtk-require"]], "Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the": [[8, "use-multiple-processes-to-speed-up-pylint-specifying-0-will-auto-detect-the"]], "number of processors available to use.": [[8, "number-of-processors-available-to-use"]], "Control the amount of potential inferred values when inferring a single": [[8, "control-the-amount-of-potential-inferred-values-when-inferring-a-single"]], "object. This can help the performance when dealing with large functions or": [[8, "object-this-can-help-the-performance-when-dealing-with-large-functions-or"]], "complex, nested conditions.": [[8, "complex-nested-conditions"]], "List of plugins (as comma separated values of python module names) to load,": [[8, "list-of-plugins-as-comma-separated-values-of-python-module-names-to-load"]], "usually to register additional checkers.": [[8, "usually-to-register-additional-checkers"]], "Pickle collected data for later comparisons.": [[8, "pickle-collected-data-for-later-comparisons"]], "Specify a configuration file.": [[8, "specify-a-configuration-file"]], "When enabled, pylint would attempt to guess common misconfiguration and emit": [[8, "when-enabled-pylint-would-attempt-to-guess-common-misconfiguration-and-emit"]], "user-friendly hints instead of false-positive error messages.": [[8, "user-friendly-hints-instead-of-false-positive-error-messages"]], "Allow loading of arbitrary C extensions. Extensions are imported into the": [[8, "allow-loading-of-arbitrary-c-extensions-extensions-are-imported-into-the"]], "active Python interpreter and may run arbitrary code.": [[8, "active-python-interpreter-and-may-run-arbitrary-code"]], "Only show warnings with the listed confidence levels. Leave empty to show": [[8, "only-show-warnings-with-the-listed-confidence-levels-leave-empty-to-show"]], "all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.": [[8, "all-valid-levels-high-inference-inference-failure-undefined"]], "Disable the message, report, category or checker with the given id(s). You": [[8, "disable-the-message-report-category-or-checker-with-the-given-id-s-you"]], "can either give multiple identifiers separated by comma (,) or put this": [[8, "can-either-give-multiple-identifiers-separated-by-comma-or-put-this"]], "option multiple times (only on the command line, not in the configuration": [[8, "option-multiple-times-only-on-the-command-line-not-in-the-configuration"]], "file where it should appear only once). You can also use \u201c\u2013disable=all\u201d to": [[8, "file-where-it-should-appear-only-once-you-can-also-use-disable-all-to"]], "disable everything first and then reenable specific checks. For example, if": [[8, "disable-everything-first-and-then-reenable-specific-checks-for-example-if"]], "you want to run only the similarities checker, you can use \u201c\u2013disable=all": [[8, "you-want-to-run-only-the-similarities-checker-you-can-use-disable-all"]], "\u2013enable=similarities\u201d. If you want to run only the classes checker, but have": [[8, "enable-similarities-if-you-want-to-run-only-the-classes-checker-but-have"]], "no Warning level messages displayed, use \u201c\u2013disable=all \u2013enable=classes": [[8, "no-warning-level-messages-displayed-use-disable-all-enable-classes"]], "\u2013disable=W\u201d.": [[8, "disable-w"]], "Enable the message, report, category or checker with the given id(s). You can": [[8, "enable-the-message-report-category-or-checker-with-the-given-id-s-you-can"]], "either give multiple identifier separated by comma (,) or put this option": [[8, "either-give-multiple-identifier-separated-by-comma-or-put-this-option"]], "multiple time (only on the command line, not in the configuration file where": [[8, "multiple-time-only-on-the-command-line-not-in-the-configuration-file-where"]], "it should appear only once). See also the \u201c\u2013disable\u201d option for examples.": [[8, "it-should-appear-only-once-see-also-the-disable-option-for-examples"]], "Python expression which should return a score less than or equal to 10. You": [[8, "python-expression-which-should-return-a-score-less-than-or-equal-to-10-you"]], "have access to the variables \u2018error\u2019, \u2018warning\u2019, \u2018refactor\u2019, and \u2018convention\u2019": [[8, "have-access-to-the-variables-error-warning-refactor-and-convention"]], "which contain the number of messages in each category, as well as \u2018statement\u2019": [[8, "which-contain-the-number-of-messages-in-each-category-as-well-as-statement"]], "which is the total number of statements analyzed. This score is used by the": [[8, "which-is-the-total-number-of-statements-analyzed-this-score-is-used-by-the"]], "global evaluation report (RP0004).": [[8, "global-evaluation-report-rp0004"]], "Template used to display messages. This is a python new-style format string": [[8, "template-used-to-display-messages-this-is-a-python-new-style-format-string"]], "used to format the message information. See doc for all details.": [[8, "used-to-format-the-message-information-see-doc-for-all-details"]], "Set the output format. Available formats are text, parseable, colorized, json": [[8, "set-the-output-format-available-formats-are-text-parseable-colorized-json"]], "and msvs (visual studio). You can also give a reporter class, e.g.": [[8, "and-msvs-visual-studio-you-can-also-give-a-reporter-class-e-g"]], "mypackage.mymodule.MyReporterClass.": [[8, "mypackage-mymodule-myreporterclass"]], "Tells whether to display a full report or only the messages.": [[8, "tells-whether-to-display-a-full-report-or-only-the-messages"]], "Activate the evaluation score.": [[8, "activate-the-evaluation-score"]], "Maximum number of nested blocks for function / method body": [[8, "maximum-number-of-nested-blocks-for-function-method-body"]], "Complete name of functions that never returns. When checking for": [[8, "complete-name-of-functions-that-never-returns-when-checking-for"]], "inconsistent-return-statements if a never returning function is called then": [[8, "inconsistent-return-statements-if-a-never-returning-function-is-called-then"]], "it will be considered as an explicit return statement and no message will be": [[8, "it-will-be-considered-as-an-explicit-return-statement-and-no-message-will-be"]], "printed.": [[8, "printed"]], "Naming style matching correct argument names.": [[8, "naming-style-matching-correct-argument-names"]], "Regular expression matching correct argument names. Overrides argument-": [[8, "regular-expression-matching-correct-argument-names-overrides-argument"]], "naming-style.": [[8, "naming-style"], [8, "id3"], [8, "id6"]], "Naming style matching correct attribute names.": [[8, "naming-style-matching-correct-attribute-names"]], "Regular expression matching correct attribute names. Overrides attr-naming-": [[8, "regular-expression-matching-correct-attribute-names-overrides-attr-naming"]], "style.": [[8, "style"], [8, "id1"], [8, "id2"], [8, "id4"], [8, "id5"]], "Bad variable names which should always be refused, separated by a comma.": [[8, "bad-variable-names-which-should-always-be-refused-separated-by-a-comma"]], "Naming style matching correct class attribute names.": [[8, "naming-style-matching-correct-class-attribute-names"]], "Regular expression matching correct class attribute names. Overrides class-": [[8, "regular-expression-matching-correct-class-attribute-names-overrides-class"]], "attribute-naming-style.": [[8, "attribute-naming-style"]], "Naming style matching correct class names.": [[8, "naming-style-matching-correct-class-names"]], "Regular expression matching correct class names. Overrides class-naming-": [[8, "regular-expression-matching-correct-class-names-overrides-class-naming"]], "Naming style matching correct constant names.": [[8, "naming-style-matching-correct-constant-names"]], "Regular expression matching correct constant names. Overrides const-naming-": [[8, "regular-expression-matching-correct-constant-names-overrides-const-naming"]], "Minimum line length for functions/classes that require docstrings, shorter": [[8, "minimum-line-length-for-functions-classes-that-require-docstrings-shorter"]], "ones are exempt.": [[8, "ones-are-exempt"]], "Naming style matching correct function names.": [[8, "naming-style-matching-correct-function-names"]], "Regular expression matching correct function names. Overrides function-": [[8, "regular-expression-matching-correct-function-names-overrides-function"]], "Good variable names which should always be accepted, separated by a comma.": [[8, "good-variable-names-which-should-always-be-accepted-separated-by-a-comma"]], "Include a hint for the correct naming format with invalid-name.": [[8, "include-a-hint-for-the-correct-naming-format-with-invalid-name"]], "Naming style matching correct inline iteration names.": [[8, "naming-style-matching-correct-inline-iteration-names"]], "Regular expression matching correct inline iteration names. Overrides": [[8, "regular-expression-matching-correct-inline-iteration-names-overrides"]], "inlinevar-naming-style.": [[8, "inlinevar-naming-style"]], "Naming style matching correct method names.": [[8, "naming-style-matching-correct-method-names"]], "Regular expression matching correct method names. Overrides method-naming-": [[8, "regular-expression-matching-correct-method-names-overrides-method-naming"]], "Naming style matching correct module names.": [[8, "naming-style-matching-correct-module-names"]], "Regular expression matching correct module names. Overrides module-naming-": [[8, "regular-expression-matching-correct-module-names-overrides-module-naming"]], "Colon-delimited sets of names that determine each other\u2019s naming style when": [[8, "colon-delimited-sets-of-names-that-determine-each-other-s-naming-style-when"]], "the name regexes allow several styles.": [[8, "the-name-regexes-allow-several-styles"]], "Regular expression which should only match function or class names that do": [[8, "regular-expression-which-should-only-match-function-or-class-names-that-do"]], "not require a docstring.": [[8, "not-require-a-docstring"]], "List of decorators that produce properties, such as abc.abstractproperty. Add": [[8, "list-of-decorators-that-produce-properties-such-as-abc-abstractproperty-add"]], "to this list to register other decorators that produce valid properties.": [[8, "to-this-list-to-register-other-decorators-that-produce-valid-properties"]], "These decorators are taken in consideration only for invalid-name.": [[8, "these-decorators-are-taken-in-consideration-only-for-invalid-name"]], "Naming style matching correct variable names.": [[8, "naming-style-matching-correct-variable-names"]], "Regular expression matching correct variable names. Overrides variable-": [[8, "regular-expression-matching-correct-variable-names-overrides-variable"]], "Expected format of line ending, e.g. empty (any line ending), LF or CRLF.": [[8, "expected-format-of-line-ending-e-g-empty-any-line-ending-lf-or-crlf"]], "Regexp for a line that is allowed to be longer than the limit.": [[8, "regexp-for-a-line-that-is-allowed-to-be-longer-than-the-limit"]], "Number of spaces of indent required inside a hanging or continued line.": [[8, "number-of-spaces-of-indent-required-inside-a-hanging-or-continued-line"]], "String used as indentation unit. This is usually \u201c \u201c (4 spaces) or \u201c\\t\u201d (1": [[8, "string-used-as-indentation-unit-this-is-usually-4-spaces-or-t-1"]], "tab).": [[8, "tab"]], "Maximum number of characters on a single line.": [[8, "maximum-number-of-characters-on-a-single-line"]], "Maximum number of lines in a module.": [[8, "maximum-number-of-lines-in-a-module"]], "List of optional constructs for which whitespace checking is disabled. `dict-": [[8, "list-of-optional-constructs-for-which-whitespace-checking-is-disabled-dict"]], "separator` is used to allow tabulation in dicts, etc.: {1 : 1,\\n222: 2}.": [[8, "separator-is-used-to-allow-tabulation-in-dicts-etc-1-1-n222-2"]], "trailing-comma allows a space between comma and closing bracket: (a, ).": [[8, "trailing-comma-allows-a-space-between-comma-and-closing-bracket-a"]], "empty-line allows space-only lines.": [[8, "empty-line-allows-space-only-lines"]], "Allow the body of a class to be on the same line as the declaration if body": [[8, "allow-the-body-of-a-class-to-be-on-the-same-line-as-the-declaration-if-body"]], "contains single statement.": [[8, "contains-single-statement"]], "Allow the body of an if to be on the same line as the test if there is no": [[8, "allow-the-body-of-an-if-to-be-on-the-same-line-as-the-test-if-there-is-no"]], "else.": [[8, "else"]], "Format style used to check logging format string. old means using %": [[8, "format-style-used-to-check-logging-format-string-old-means-using"]], "formatting, new is for {} formatting,and fstr is for f-strings.": [[8, "formatting-new-is-for-formatting-and-fstr-is-for-f-strings"]], "Logging modules to check that the string format arguments are in logging": [[8, "logging-modules-to-check-that-the-string-format-arguments-are-in-logging"]], "function parameter format.": [[8, "function-parameter-format"]], "List of note tags to take in consideration, separated by a comma.": [[8, "list-of-note-tags-to-take-in-consideration-separated-by-a-comma"]], "Ignore comments when computing similarities.": [[8, "ignore-comments-when-computing-similarities"]], "Ignore docstrings when computing similarities.": [[8, "ignore-docstrings-when-computing-similarities"]], "Ignore imports when computing similarities.": [[8, "ignore-imports-when-computing-similarities"]], "Minimum lines number of a similarity.": [[8, "minimum-lines-number-of-a-similarity"]], "Limits count of emitted suggestions for spelling mistakes.": [[8, "limits-count-of-emitted-suggestions-for-spelling-mistakes"]], "Spelling dictionary name. Available dictionaries: none. To make it work,": [[8, "spelling-dictionary-name-available-dictionaries-none-to-make-it-work"]], "install the python-enchant package.": [[8, "install-the-python-enchant-package"]], "List of comma separated words that should not be checked.": [[8, "list-of-comma-separated-words-that-should-not-be-checked"]], "A path to a file that contains the private dictionary; one word per line.": [[8, "a-path-to-a-file-that-contains-the-private-dictionary-one-word-per-line"]], "Tells whether to store unknown words to the private dictionary (see the": [[8, "tells-whether-to-store-unknown-words-to-the-private-dictionary-see-the"]], "\u2013spelling-private-dict-file option) instead of raising a message.": [[8, "spelling-private-dict-file-option-instead-of-raising-a-message"]], "This flag controls whether the implicit-str-concat-in-sequence should": [[8, "this-flag-controls-whether-the-implicit-str-concat-in-sequence-should"]], "generate a warning on implicit string concatenation in sequences defined over": [[8, "generate-a-warning-on-implicit-string-concatenation-in-sequences-defined-over"]], "several lines.": [[8, "several-lines"]], "List of decorators that produce context managers, such as": [[8, "list-of-decorators-that-produce-context-managers-such-as"]], "contextlib.contextmanager. Add to this list to register other decorators that": [[8, "contextlib-contextmanager-add-to-this-list-to-register-other-decorators-that"]], "produce valid context managers.": [[8, "produce-valid-context-managers"]], "List of members which are set dynamically and missed by pylint inference": [[8, "list-of-members-which-are-set-dynamically-and-missed-by-pylint-inference"]], "system, and so shouldn\u2019t trigger E1101 when accessed. Python regular": [[8, "system-and-so-shouldn-t-trigger-e1101-when-accessed-python-regular"]], "expressions are accepted.": [[8, "expressions-are-accepted"]], "Tells whether missing members accessed in mixin class should be ignored. A": [[8, "tells-whether-missing-members-accessed-in-mixin-class-should-be-ignored-a"]], "mixin class is detected if its name ends with \u201cmixin\u201d (case insensitive).": [[8, "mixin-class-is-detected-if-its-name-ends-with-mixin-case-insensitive"]], "Tells whether to warn about missing members when the owner of the attribute": [[8, "tells-whether-to-warn-about-missing-members-when-the-owner-of-the-attribute"]], "is inferred to be None.": [[8, "is-inferred-to-be-none"]], "This flag controls whether pylint should warn about no-member and similar": [[8, "this-flag-controls-whether-pylint-should-warn-about-no-member-and-similar"]], "checks whenever an opaque object is returned when inferring. The inference": [[8, "checks-whenever-an-opaque-object-is-returned-when-inferring-the-inference"]], "can return multiple potential results while evaluating a Python object, but": [[8, "can-return-multiple-potential-results-while-evaluating-a-python-object-but"]], "some branches might not be evaluated, which results in partial inference. In": [[8, "some-branches-might-not-be-evaluated-which-results-in-partial-inference-in"]], "that case, it might be useful to still emit no-member and other checks for": [[8, "that-case-it-might-be-useful-to-still-emit-no-member-and-other-checks-for"]], "the rest of the inferred objects.": [[8, "the-rest-of-the-inferred-objects"]], "List of class names for which member attributes should not be checked (useful": [[8, "list-of-class-names-for-which-member-attributes-should-not-be-checked-useful"]], "for classes with dynamically set attributes). This supports the use of": [[8, "for-classes-with-dynamically-set-attributes-this-supports-the-use-of"]], "qualified names.": [[8, "qualified-names"]], "List of module names for which member attributes should not be checked": [[8, "list-of-module-names-for-which-member-attributes-should-not-be-checked"]], "(useful for modules/projects where namespaces are manipulated during runtime": [[8, "useful-for-modules-projects-where-namespaces-are-manipulated-during-runtime"]], "and thus existing member attributes cannot be deduced by static analysis). It": [[8, "and-thus-existing-member-attributes-cannot-be-deduced-by-static-analysis-it"]], "supports qualified module names, as well as Unix pattern matching.": [[8, "supports-qualified-module-names-as-well-as-unix-pattern-matching"]], "Show a hint with possible names when a member name was not found. The aspect": [[8, "show-a-hint-with-possible-names-when-a-member-name-was-not-found-the-aspect"]], "of finding the hint is based on edit distance.": [[8, "of-finding-the-hint-is-based-on-edit-distance"]], "The minimum edit distance a name should have in order to be considered a": [[8, "the-minimum-edit-distance-a-name-should-have-in-order-to-be-considered-a"]], "similar match for a missing member name.": [[8, "similar-match-for-a-missing-member-name"]], "The total number of similar names that should be taken in consideration when": [[8, "the-total-number-of-similar-names-that-should-be-taken-in-consideration-when"]], "showing a hint for a missing member.": [[8, "showing-a-hint-for-a-missing-member"]], "List of decorators that change the signature of a decorated function.": [[8, "list-of-decorators-that-change-the-signature-of-a-decorated-function"]], "List of additional names supposed to be defined in builtins. Remember that": [[8, "list-of-additional-names-supposed-to-be-defined-in-builtins-remember-that"]], "you should avoid defining new builtins when possible.": [[8, "you-should-avoid-defining-new-builtins-when-possible"]], "Tells whether unused global variables should be treated as a violation.": [[8, "tells-whether-unused-global-variables-should-be-treated-as-a-violation"]], "List of strings which can identify a callback function by name. A callback": [[8, "list-of-strings-which-can-identify-a-callback-function-by-name-a-callback"]], "name must start or end with one of those strings.": [[8, "name-must-start-or-end-with-one-of-those-strings"]], "A regular expression matching the name of dummy variables (i.e. expected to": [[8, "a-regular-expression-matching-the-name-of-dummy-variables-i-e-expected-to"]], "not be used).": [[8, "not-be-used"]], "Argument names that match this expression will be ignored. Default to name": [[8, "argument-names-that-match-this-expression-will-be-ignored-default-to-name"]], "with leading underscore.": [[8, "with-leading-underscore"]], "Tells whether we should check for unused import in init files.": [[8, "tells-whether-we-should-check-for-unused-import-in-init-files"]], "List of qualified module names which can have objects that can redefine": [[8, "list-of-qualified-module-names-which-can-have-objects-that-can-redefine"]], "builtins.": [[8, "builtins"]], "List of method names used to declare (i.e. assign) instance attributes.": [[8, "list-of-method-names-used-to-declare-i-e-assign-instance-attributes"]], "List of member names, which should be excluded from the protected access": [[8, "list-of-member-names-which-should-be-excluded-from-the-protected-access"]], "warning.": [[8, "warning"]], "List of valid names for the first argument in a class method.": [[8, "list-of-valid-names-for-the-first-argument-in-a-class-method"]], "List of valid names for the first argument in a metaclass class method.": [[8, "list-of-valid-names-for-the-first-argument-in-a-metaclass-class-method"]], "Maximum number of arguments for function / method.": [[8, "maximum-number-of-arguments-for-function-method"]], "Maximum number of attributes for a class (see R0902).": [[8, "maximum-number-of-attributes-for-a-class-see-r0902"]], "Maximum number of boolean expressions in an if statement (see R0916).": [[8, "maximum-number-of-boolean-expressions-in-an-if-statement-see-r0916"]], "Maximum number of branch for function / method body.": [[8, "maximum-number-of-branch-for-function-method-body"]], "Maximum number of locals for function / method body.": [[8, "maximum-number-of-locals-for-function-method-body"]], "Maximum number of parents for a class (see R0901).": [[8, "maximum-number-of-parents-for-a-class-see-r0901"]], "Maximum number of public methods for a class (see R0904).": [[8, "maximum-number-of-public-methods-for-a-class-see-r0904"]], "Maximum number of return / yield for function / method body.": [[8, "maximum-number-of-return-yield-for-function-method-body"]], "Maximum number of statements in function / method body.": [[8, "maximum-number-of-statements-in-function-method-body"]], "Minimum number of public methods for a class (see R0903).": [[8, "minimum-number-of-public-methods-for-a-class-see-r0903"]], "List of modules that can be imported at any level, not just the top level": [[8, "list-of-modules-that-can-be-imported-at-any-level-not-just-the-top-level"]], "one.": [[8, "one"]], "Allow wildcard imports from modules that define all.": [[8, "allow-wildcard-imports-from-modules-that-define-all"]], "Analyse import fallback blocks. This can be used to support both Python 2 and": [[8, "analyse-import-fallback-blocks-this-can-be-used-to-support-both-python-2-and"]], "3 compatible code, which means that the block might have code that exists": [[8, "compatible-code-which-means-that-the-block-might-have-code-that-exists"]], "only in one or another interpreter, leading to false positives when analysed.": [[8, "only-in-one-or-another-interpreter-leading-to-false-positives-when-analysed"]], "Deprecated modules which should not be used, separated by a comma.": [[8, "deprecated-modules-which-should-not-be-used-separated-by-a-comma"]], "Create a graph of external dependencies in the given file (report RP0402 must": [[8, "create-a-graph-of-external-dependencies-in-the-given-file-report-rp0402-must"]], "not be disabled).": [[8, "not-be-disabled"], [8, "id7"]], "Create a graph of every (i.e. internal and external) dependencies in the": [[8, "create-a-graph-of-every-i-e-internal-and-external-dependencies-in-the"]], "given file (report RP0402 must not be disabled).": [[8, "given-file-report-rp0402-must-not-be-disabled"]], "Create a graph of internal dependencies in the given file (report RP0402 must": [[8, "create-a-graph-of-internal-dependencies-in-the-given-file-report-rp0402-must"]], "Force import order to recognize a module as part of the standard": [[8, "force-import-order-to-recognize-a-module-as-part-of-the-standard"]], "compatibility libraries.": [[8, "compatibility-libraries"]], "Force import order to recognize a module as part of a third party library.": [[8, "force-import-order-to-recognize-a-module-as-part-of-a-third-party-library"]], "Couples of modules and preferred modules, separated by a comma.": [[8, "couples-of-modules-and-preferred-modules-separated-by-a-comma"]], "Exceptions that will emit a warning when being caught. Defaults to": [[8, "exceptions-that-will-emit-a-warning-when-being-caught-defaults-to"]], "\u201cBaseException, Exception\u201d.": [[8, "baseexception-exception"]], "pypyroject.toml": [[9, "pypyroject-toml"]], "Bailo Python Client": [[10, "bailo-python-client"], [2, "bailo-python-client"]], "Key Features": [[10, "key-features"]], "Installing": [[10, "installing"]], "Getting Started": [[10, "getting-started"]], "Documentation": [[10, "documentation"]], "Building locally": [[10, "building-locally"]], "Development": [[10, "development"]], "Install and add precommit": [[10, "install-and-add-precommit"]], "Install the package locally": [[10, "install-the-package-locally"]], "Testing": [[10, "testing"]], "bailo.core package": [[0, "bailo-core-package"]], "bailo.helper package": [[1, "module-bailo.helper.access_request"]], "Welcome to Bailo\u2019s Python Client documentation!": [[2, "module-bailo"]], "Packages:": [[2, null]], "Notebooks:": [[2, null]], "Experiment Tracking with Bailo & MLFlow": [[4, "Experiment-Tracking-with-Bailo-&-MLFlow"]], "Connecting with Bailo": [[4, "Connecting-with-Bailo"]], "Setting up MLFlow Tracking": [[4, "Setting-up-MLFlow-Tracking"]], "Preparing a custom schema for tracking": [[4, "Preparing-a-custom-schema-for-tracking"]], "Creating a new experiment": [[4, "Creating-a-new-experiment"]], "Conducting experiment runs": [[4, "Conducting-experiment-runs"]], "Running an experiment with the Bailo python client": [[4, "Running-an-experiment-with-the-Bailo-python-client"]], "Creating a dummy MLFlow experiment run": [[4, "Creating-a-dummy-MLFlow-experiment-run"]], "Importing existing experiments from MLFlow into Bailo": [[4, "Importing-existing-experiments-from-MLFlow-into-Bailo"]], "Publishing results to Bailo": [[4, "Publishing-results-to-Bailo"]], "Managing Models & Releases (ResNet-50 Example with PyTorch)": [[5, "Managing-Models-&-Releases-(ResNet-50-Example-with-PyTorch)"]], "Creating a new ResNet-50 model in Bailo": [[5, "Creating-a-new-ResNet-50-model-in-Bailo"]], "Creating and updating the base model": [[5, "Creating-and-updating-the-base-model"]], "Creating and populating a model card": [[5, "Creating-and-populating-a-model-card"]], "Retrieving an existing model": [[5, "Retrieving-an-existing-model"]], "Creating and managing releases for models": [[5, "Creating-and-managing-releases-for-models"]], "Creating a release": [[5, "Creating-a-release"]], "Preparing the model weights using PyTorch": [[5, "Preparing-the-model-weights-using-PyTorch"]], "Uploading weights to the release": [[5, "Uploading-weights-to-the-release"]], "Retrieving a release": [[5, "Retrieving-a-release"]], "Downloading weights from the release": [[5, "Downloading-weights-from-the-release"]], "Loading the model using PyTorch": [[5, "Loading-the-model-using-PyTorch"]]}, "indexentries": {"access_request (bailo.core.enums.schemakind attribute)": [[0, "bailo.core.enums.SchemaKind.ACCESS_REQUEST"]], "agent (class in bailo.core.agent)": [[0, "bailo.core.agent.Agent"]], "bailoexception": [[0, "bailo.core.exceptions.BailoException"]], "client (class in bailo.core.client)": [[0, "bailo.core.client.Client"]], "model (bailo.core.enums.schemakind attribute)": [[0, "bailo.core.enums.SchemaKind.MODEL"]], "model_senior_responsible_officer (bailo.core.enums.role attribute)": [[0, "bailo.core.enums.Role.MODEL_SENIOR_RESPONSIBLE_OFFICER"]], "model_technical_reviewer (bailo.core.enums.role attribute)": [[0, "bailo.core.enums.Role.MODEL_TECHNICAL_REVIEWER"]], "modelvisibility (class in bailo.core.enums)": [[0, "bailo.core.enums.ModelVisibility"]], "owner (bailo.core.enums.role attribute)": [[0, "bailo.core.enums.Role.OWNER"]], "private (bailo.core.enums.modelvisibility attribute)": [[0, "bailo.core.enums.ModelVisibility.PRIVATE"]], "public (bailo.core.enums.modelvisibility attribute)": [[0, "bailo.core.enums.ModelVisibility.PUBLIC"]], "pkiagent (class in bailo.core.agent)": [[0, "bailo.core.agent.PkiAgent"]], "responseexception": [[0, "bailo.core.exceptions.ResponseException"]], "role (class in bailo.core.enums)": [[0, "bailo.core.enums.Role"]], "schemakind (class in bailo.core.enums)": [[0, "bailo.core.enums.SchemaKind"]], "tokenagent (class in bailo.core.agent)": [[0, "bailo.core.agent.TokenAgent"]], "__init__() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.__init__"]], "__init__() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.__init__"]], "bailo.core.agent": [[0, "module-bailo.core.agent"]], "bailo.core.client": [[0, "module-bailo.core.client"]], "bailo.core.enums": [[0, "module-bailo.core.enums"]], "bailo.core.exceptions": [[0, "module-bailo.core.exceptions"]], "delete() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.delete"]], "delete() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.delete"]], "delete() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.delete"]], "delete_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.delete_access_request"]], "delete_file() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.delete_file"]], "delete_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.delete_release"]], "get() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.get"]], "get() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.get"]], "get() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.get"]], "get_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_access_request"]], "get_access_requests() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_access_requests"]], "get_all_images() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_images"]], "get_all_releases() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_releases"]], "get_all_schemas() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_schemas"]], "get_all_teams() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_teams"]], "get_download_by_filename() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_download_by_filename"]], "get_download_file() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_download_file"]], "get_files() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_files"]], "get_model() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model"]], "get_model_card() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model_card"]], "get_model_roles() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model_roles"]], "get_model_user_roles() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model_user_roles"]], "get_models() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_models"]], "get_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_release"]], "get_reviews() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_reviews"]], "get_schema() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_schema"]], "get_team() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_team"]], "get_user_teams() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_user_teams"]], "model_card_from_schema() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.model_card_from_schema"]], "module": [[0, "module-bailo.core.agent"], [0, "module-bailo.core.client"], [0, "module-bailo.core.enums"], [0, "module-bailo.core.exceptions"], [1, "module-bailo.helper.access_request"], [1, "module-bailo.helper.model"], [1, "module-bailo.helper.release"], [1, "module-bailo.helper.schema"], [2, "module-bailo"]], "patch() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.patch"]], "patch() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.patch"]], "patch() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.patch"]], "patch_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.patch_access_request"]], "patch_model() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.patch_model"]], "patch_team() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.patch_team"]], "post() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.post"]], "post() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.post"]], "post() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.post"]], "post_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_access_request"]], "post_model() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_model"]], "post_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_release"]], "post_review() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_review"]], "post_schema() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_schema"]], "post_team() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_team"]], "push() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.push"]], "put() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.put"]], "put() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.put"]], "put() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.put"]], "put_model_card() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.put_model_card"]], "put_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.put_release"]], "simple_upload() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.simple_upload"]], "accessrequest (class in bailo.helper.access_request)": [[1, "bailo.helper.access_request.AccessRequest"]], "experiment (class in bailo.helper.model)": [[1, "bailo.helper.model.Experiment"]], "model (class in bailo.helper.model)": [[1, "bailo.helper.model.Model"]], "release (class in bailo.helper.release)": [[1, "bailo.helper.release.Release"]], "schema (class in bailo.helper.schema)": [[1, "bailo.helper.schema.Schema"]], "__init__() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.__init__"]], "bailo.helper.access_request": [[1, "module-bailo.helper.access_request"]], "bailo.helper.model": [[1, "module-bailo.helper.model"]], "bailo.helper.release": [[1, "module-bailo.helper.release"]], "bailo.helper.schema": [[1, "module-bailo.helper.schema"]], "card_from_model() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.card_from_model"]], "card_from_schema() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.card_from_schema"]], "card_from_template() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.card_from_template"]], "create() (bailo.helper.access_request.accessrequest class method)": [[1, "bailo.helper.access_request.AccessRequest.create"]], "create() (bailo.helper.model.experiment class method)": [[1, "bailo.helper.model.Experiment.create"]], "create() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.create"]], "create() (bailo.helper.release.release class method)": [[1, "bailo.helper.release.Release.create"]], "create() (bailo.helper.schema.schema class method)": [[1, "bailo.helper.schema.Schema.create"]], "create_experiment() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.create_experiment"]], "create_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.create_release"]], "delete() (bailo.helper.access_request.accessrequest method)": [[1, "bailo.helper.access_request.AccessRequest.delete"]], "delete() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.delete"]], "download() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.download"]], "from_id() (bailo.helper.access_request.accessrequest class method)": [[1, "bailo.helper.access_request.AccessRequest.from_id"]], "from_id() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.from_id"]], "from_id() (bailo.helper.schema.schema class method)": [[1, "bailo.helper.schema.Schema.from_id"]], "from_mlflow() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.from_mlflow"]], "from_version() (bailo.helper.release.release class method)": [[1, "bailo.helper.release.Release.from_version"]], "get_card_latest() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_card_latest"]], "get_card_revision() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_card_revision"]], "get_image() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_image"]], "get_images() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_images"]], "get_latest_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_latest_release"]], "get_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_release"]], "get_releases() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_releases"]], "get_roles() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_roles"]], "get_user_roles() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_user_roles"]], "log_artifacts() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_artifacts"]], "log_dataset() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_dataset"]], "log_metrics() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_metrics"]], "log_params() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.log_params"]], "publish() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.publish"]], "start_run() (bailo.helper.model.experiment method)": [[1, "bailo.helper.model.Experiment.start_run"]], "update() (bailo.helper.access_request.accessrequest method)": [[1, "bailo.helper.access_request.AccessRequest.update"]], "update() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.update"]], "update() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.update"]], "update_model_card() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.update_model_card"]], "upload() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.upload"]], "bailo": [[2, "module-bailo"]]}})