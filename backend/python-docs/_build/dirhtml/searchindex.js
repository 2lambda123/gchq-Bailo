Search.setIndex({"docnames": ["bailo.core", "bailo.helper", "index", "notebooks/access_requests_demo", "notebooks/models_and_releases_demo", "notebooks/schemas_demo", "pre-commit-config", "pylint", "pyproject", "readme_link"], "filenames": ["bailo.core.rst", "bailo.helper.rst", "index.rst", "notebooks/access_requests_demo.ipynb", "notebooks/models_and_releases_demo.ipynb", "notebooks/schemas_demo.ipynb", "pre-commit-config.md", "pylint.md", "pyproject.md", "readme_link.md"], "titles": ["bailo.core package", "bailo.helper package", "Welcome to Bailo\u2019s Python Client documentation!", "Managing Access Requests", "Managing Models &amp; Releases", "Managing Schemas", "pre-commit-config.yaml", "A comma-separated list of package or module names from where C extensions may", "pypyroject.toml", "Bailo Python Client"], "terms": {"The": [0, 1, 3, 4, 5, 6, 8, 9], "contain": [0, 4, 8], "suppport": 0, "one": [0, 4], "endpoint": [0, 3, 4, 5], "It": [0, 8], "i": [0, 1, 2, 3, 4, 5, 6, 8, 9], "recommend": 0, "us": [0, 1, 6, 8, 9], "helper": [0, 2, 3, 4, 5], "most": 0, "class": [0, 1, 3, 4, 5], "agent": [0, 2, 3, 4, 5], "sourc": [0, 1], "base": [0, 1], "object": [0, 1, 3, 4, 5], "api": [0, 9], "talk": 0, "wrap": 0, "each": [0, 4], "request": [0, 1, 2], "an": [0, 1], "except": 0, "handler": 0, "map": 0, "error": [0, 1, 4], "python": [0, 3, 4, 5, 6, 8], "among": 0, "statu": 0, "code": [0, 4, 6], "less": 0, "than": 0, "400": 0, "default": [0, 1, 3, 4, 5, 9], "timeout": 0, "5": [0, 5, 7], "second": 0, "delet": [0, 1], "arg": [0, 7], "kwarg": 0, "get": [0, 1, 2], "patch": 0, "post": [0, 1], "push": 0, "put": 0, "pkiagent": [0, 2, 3, 4, 5], "cert": [0, 3, 4, 5], "str": [0, 1], "kei": [0, 2, 3, 4, 5], "auth": [0, 3, 4, 5], "__init__": [0, 1], "initi": 0, "pki": [0, 3, 4, 5], "authent": [0, 3, 4, 5], "paramet": [0, 1, 3, 4, 5], "path": 0, "file": [0, 1, 8, 9], "certif": 0, "author": 0, "tokenag": [0, 2], "access_kei": 0, "secret_kei": 0, "token": 0, "access": [0, 1, 2], "secret": 0, "client": [0, 1, 3, 4, 5], "url": [0, 3, 4, 5], "creat": [0, 1, 6, 9], "can": [0, 1, 3, 4, 5, 6, 9], "websit": 0, "handl": [0, 3, 4, 5], "delete_access_request": 0, "model_id": [0, 1, 3, 4], "access_request_id": [0, 1, 3], "specif": [0, 1, 4], "associ": 0, "model": [0, 1, 2, 3, 5, 9], "uniqu": [0, 1, 5], "id": [0, 1], "return": [0, 1, 4, 5], "json": [0, 1, 5], "respons": [0, 1], "delete_fil": 0, "file_id": [0, 1], "delete_releas": 0, "release_vers": 0, "releas": [0, 1, 2, 9], "version": [0, 1, 4, 9], "get_access_request": 0, "retriev": [0, 1], "given": [0, 1, 9], "its": 0, "all": [0, 1, 9], "get_all_imag": 0, "imag": [0, 1], "A": [0, 1, 3, 4, 5, 9], "get_all_releas": 0, "get_all_schema": 0, "kind": [0, 1, 5], "schemakind": [0, 1, 2, 5], "none": [0, 1], "schema": [0, 1, 2, 4], "enum": [0, 1], "defin": 0, "e": [0, 1, 3, 4, 5, 9], "g": [0, 1, 3, 4, 5], "accessrequest": [0, 1, 2, 3], "get_all_team": 0, "team": [0, 1], "get_download_fil": 0, "buffer": [0, 1], "bytesio": [0, 1, 4], "download": [0, 1, 9], "write": 0, "get_fil": 0, "get_model": 0, "get_model_card": 0, "card": [0, 1], "get_model_rol": 0, "role": [0, 1, 2], "get_model_user_rol": 0, "current": [0, 1, 8], "user": [0, 1, 3, 6], "task": 0, "librari": 0, "list": [0, 1], "filter": 0, "search": 0, "find": [0, 5], "provid": [0, 1, 2], "term": 0, "classif": 0, "tensorflow": 0, "custom": [0, 4], "string": [0, 1, 5], "locat": 0, "get_releas": [0, 1, 4], "get_review": 0, "activ": 0, "bool": [0, 1, 7], "review": [0, 1], "within": [0, 1, 2, 3, 4, 5, 9], "boolean": 0, "repres": [0, 1], "get_schema": 0, "schema_id": [0, 1, 3, 4, 5], "get_team": 0, "team_id": [0, 1, 3, 4, 9], "get_user_team": 0, "model_card_from_schema": 0, "patch_access_request": 0, "metadata": [0, 1, 3], "ani": [0, 1, 3, 4, 5], "updat": [0, 1, 3], "patch_model": 0, "name": [0, 1, 3, 4, 5, 9], "descript": [0, 1, 3, 4, 5, 9], "visibl": [0, 1, 4], "public": [0, 1], "privat": [0, 1], "patch_team": 0, "post_access_request": 0, "post_model": 0, "modelvis": [0, 1, 2], "post_releas": 0, "note": [0, 1, 4, 5, 9], "model_card_vers": [0, 1, 4], "int": [0, 1, 7], "minor": [0, 1, 4], "fals": [0, 1, 5], "draft": [0, 1, 5], "new": [0, 9], "signifi": 0, "post_review": 0, "decis": 0, "comment": 0, "semant": [0, 1], "make": [0, 1, 4, 9], "either": [0, 1, 4, 9], "approv": 0, "chang": [0, 1, 4], "go": 0, "post_schema": 0, "json_schema": [0, 1, 5], "dict": [0, 1], "post_team": 0, "put_model_card": 0, "latest": [0, 1, 4], "put_releas": 0, "simple_upload": 0, "simpl": [0, 9], "upload": [0, 1, 9], "valu": [0, 1], "whether": [0, 1], "publicli": 0, "model_senior_responsability_offic": 0, "msro": 0, "model_tecnical_review": 0, "mtr": 0, "owner": 0, "type": [0, 4, 5], "access_request": [0, 1, 3], "bailoexcept": [0, 2], "gener": [0, 3, 4, 5, 6, 9], "responseexcept": [0, 2], "gave": 0, "created_bi": 1, "being": 1, "made": 1, "thi": [1, 2, 3, 4, 5, 8, 9], "ha": 1, "been": 1, "classmethod": [1, 3, 4, 5, 7], "interact": [1, 2, 3, 4, 5], "messag": 1, "confirm": 1, "remov": 1, "from_id": 1, "exist": [1, 3], "from": [1, 3, 4, 5, 6, 9], "": 1, "state": 1, "card_from_model": 1, "copi": 1, "differ": [1, 4], "yet": 1, "implement": 1, "rais": 1, "notimplementederror": 1, "Not": 1, "card_from_schema": [1, 4, 9], "card_from_templ": 1, "templat": 1, "build": [1, 6, 8], "create_releas": [1, 4, 9], "true": [1, 5], "call": [1, 3, 4], "method": 1, "get_card_latest": 1, "get_card_revis": 1, "revis": 1, "get_imag": 1, "refer": 1, "get_latest_releas": [1, 4], "from_vers": 1, "get_rol": 1, "get_user_rol": 1, "summari": [1, 5], "update_model_card": [1, 4], "model_card": [1, 4], "dictionari": 1, "If": [1, 4, 9], "attribut": [1, 3, 4], "option": [1, 8], "ar": [1, 3, 4, 5, 6, 8, 9], "store": 1, "give": 1, "read": 1, "file_nam": 1, "directori": [1, 9], "f": [1, 4, 9], "ecosystem": 2, "manag": 2, "lifecycl": 2, "machin": 2, "learn": [2, 4], "support": [2, 3, 4, 5], "featur": 2, "instal": 2, "start": 2, "develop": 2, "core": [2, 3, 4, 5], "bailo": [3, 4, 5], "enabl": [3, 4, 5], "intuit": [3, 4, 5], "servic": [3, 4, 5], "environ": [3, 4, 5], "exampl": [3, 4, 5, 8], "notebook": [3, 4, 5], "run": [3, 4, 5, 9], "through": [3, 4, 5], "follow": [3, 4, 5, 9], "concept": [3, 4, 5], "prerequisit": [3, 4, 5], "3": [3, 4, 5, 9], "8": [3, 4, 5, 7, 9], "1": [3, 4, 5, 9], "higher": [3, 4, 5, 9], "includ": [3, 4, 5, 6, 8], "demo": [3, 4, 5], "local": [3, 4, 5], "remot": [3, 4, 5], "see": [3, 4, 5], "http": [3, 4, 5, 7, 9], "github": [3, 4, 5], "com": [3, 4, 5], "gchq": [3, 4, 5], "split": [3, 4, 5, 9], "two": [3, 4, 5], "sub": [3, 4, 5], "packag": [3, 4, 5, 6, 8], "For": [3, 4, 5], "direct": [3, 4, 5], "more": [3, 4, 5], "oper": [3, 4, 5], "In": [3, 4, 5, 6, 9], "order": [3, 4, 5, 9], "you": [3, 4, 5, 9], "first": [3, 4, 5], "need": [3, 4, 5], "instanti": [3, 4, 5], "By": [3, 4, 5], "howev": [3, 4, 5], "also": [3, 4, 5, 8], "which": [3, 4, 5, 6], "pass": [3, 4, 5], "when": [3, 4, 5, 8], "necessari": [3, 4, 5], "import": [3, 4, 5, 9], "statement": [3, 4, 5], "127": [3, 4, 5], "0": [3, 4, 5, 9], "8080": [3, 4, 5, 9], "insert": [3, 4, 5], "host": [3, 4, 5], "section": [3, 4, 5, 9], "we": [3, 4, 5], "ll": [3, 4, 5], "On": [3, 4, 5], "must": [3, 4, 5], "consist": [3, 4, 5], "least": [3, 4], "upon": [3, 4, 5], "creation": [3, 4, 5], "These": [3, 4, 5, 6], "below": [3, 4, 5], "befor": [3, 4, 5], "our": [3, 4, 5], "yolov5": [3, 4], "detect": [3, 4], "uncategoris": [3, 4, 9], "overview": [3, 4, 5], "entiti": 3, "test": [3, 5, 8], "enddat": 3, "1970": 3, "01": 3, "minim": [3, 4, 9], "v10": [3, 4, 9], "beta": [3, 4, 9], "previou": [3, 4, 5], "your": [3, 4, 5], "inform": [3, 4, 5], "edit": 3, "directli": 3, "demonstr": [3, 4], "new_metadata": 3, "newnam": 3, "simpli": 3, "4": 4, "other": [4, 5, 9], "like": 4, "ad": 4, "later": 4, "too": [4, 5], "assign": 4, "backend": [4, 9], "mai": [4, 8, 9], "relai": 4, "empti": 4, "instanc": [4, 5], "out": 4, "scope": 4, "success": 4, "abov": 4, "have": 4, "should": 4, "set": 4, "next": 4, "time": 4, "want": 4, "how": 4, "match": 4, "otherwis": 4, "thrown": 4, "new_card": 4, "tag": [4, 5], "modelsummari": 4, "purpos": [4, 9], "now": 4, "2": 4, "earlier": 4, "displai": 4, "same": 4, "adjust": 4, "don": 4, "t": 4, "drastic": 4, "behaviour": 4, "separ": 4, "itself": 4, "release_on": 4, "To": 4, "take": 4, "content": [4, 9], "demo_fil": 4, "txt": 4, "would": [4, 5], "look": [4, 9], "allow": 4, "integr": [4, 9], "s3": 4, "weight": 4, "bias": 4, "print": 4, "open": [4, 9], "altern": 4, "both": [4, 8], "release_latest": 4, "successfulli": 4, "ident": 4, "random": 5, "function": 5, "identifi": 5, "suffic": 5, "typic": 5, "reserv": 5, "administr": 5, "def": 5, "random_gener": 5, "n": [5, 7], "10": 5, "join": 5, "choic": [5, 7], "ascii_uppercas": 5, "digit": 5, "k": [5, 7], "org": 5, "07": 5, "properti": 5, "titl": 5, "modeloverview": 5, "what": 5, "doe": 5, "do": 5, "minlength": 5, "maxlength": 5, "5000": 5, "searchabl": 5, "help": [5, 6], "arrai": 5, "widget": 5, "tagselectorbeta": 5, "item": 5, "uniqueitem": 5, "requir": [5, 8, 9], "additionalproperti": 5, "git": [6, 9], "hook": [6, 7], "scan": 6, "prior": 6, "checkin": 6, "configur": [6, 8], "focus": 6, "action": 6, "prevent": 6, "fail": 6, "dure": 6, "onli": [6, 8, 9], "format": 6, "automat": 6, "perform": 6, "auto": 6, "black": 6, "sort": 6, "depend": 6, "isort": 6, "lint": [6, 8], "left": 6, "discret": 6, "master": 7, "pkg": 7, "whitelist": 7, "numpi": 7, "torch": 7, "cv2": 7, "pyodbc": 7, "pydant": 7, "ciso8601": 7, "netcdf4": 7, "scipi": 7, "cv": 7, "py": [7, 8], "conftest": 7, "setrecursionlimit": 7, "getrecursionlimit": 7, "job": 7, "100": 7, "persist": 7, "ye": 7, "rcfile": 7, "mode": 7, "unsaf": 7, "float": 7, "msg": 7, "max": 7, "exit": 7, "basic": 7, "snake_cas": 7, "rgx": 7, "foo": 7, "bar": 7, "baz": 7, "toto": 7, "tutu": 7, "tata": 7, "pascalcas": 7, "upper_cas": 7, "min": 7, "j": 7, "ex": 7, "_": 7, "df": 7, "ax": 7, "group": 7, "long": 7, "after": 7, "paren": 7, "120": 7, "1000": 7, "stmt": 7, "miscellan": 7, "fixm": 7, "xxx": 7, "todo": 7, "9": 7, "jump": 7, "typecheck": 7, "np": 7, "pyspark": 7, "sql": 7, "collect_list": 7, "optpars": 7, "thread": 7, "_local": 7, "_thread": 7, "swagger_cli": 7, "mutat": 7, "dbutil": 7, "cb_": 7, "_cb": 7, "za": 7, "z0": 7, "9_": 7, "ignored_": 7, "unused_": 7, "six": 7, "move": 7, "past": 7, "futur": [7, 8], "io": 7, "setup": [7, 8], "post_init": 7, "_asdict": 7, "_field": 7, "_replac": 7, "_sourc": 7, "_make": 7, "cl": 7, "design": 7, "7": 7, "expr": 7, "12": 7, "15": 7, "20": 7, "6": 7, "50": 7, "tkinter": 7, "tix": 7, "ext": 7, "known": 7, "azureiai": 7, "logist": 7, "inventoryplan": 7, "overgener": 7, "pyproject": 8, "main": 8, "project": 8, "publish": 8, "replac": 8, "flit": 8, "poetri": 8, "consid": 8, "viabl": 8, "setuptool": 8, "cfg": 8, "still": 8, "wrapper": 9, "tabl": 9, "binari": 9, "pip": 9, "localhost": 9, "yolo": 9, "yolov4": 9, "onc": 9, "my_releas": 9, "onnx": 9, "documen": 9, "render": 9, "sphinx": 9, "serv": 9, "here": 9, "doc": 9, "html": 9, "bat": 9, "window": 9, "alreadi": 9, "work": 9, "prompt": 9, "overwrit": 9, "huski": 9, "instruct": 9, "cli": 9, "pre": 9, "commit": 9, "pytest": 9, "ran": 9, "accordingli": 9, "categori": 9, "autom": 9, "sure": 9, "m": 9}, "objects": {"": [[2, 0, 0, "-", "bailo"]], "bailo.core": [[0, 0, 0, "-", "agent"], [0, 0, 0, "-", "client"], [0, 0, 0, "-", "enums"], [0, 0, 0, "-", "exceptions"]], "bailo.core.agent": [[0, 1, 1, "", "Agent"], [0, 1, 1, "", "PkiAgent"], [0, 1, 1, "", "TokenAgent"]], "bailo.core.agent.Agent": [[0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "push"], [0, 2, 1, "", "put"]], "bailo.core.agent.PkiAgent": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "put"]], "bailo.core.agent.TokenAgent": [[0, 2, 1, "", "__init__"], [0, 2, 1, "", "delete"], [0, 2, 1, "", "get"], [0, 2, 1, "", "patch"], [0, 2, 1, "", "post"], [0, 2, 1, "", "put"]], "bailo.core.client": [[0, 1, 1, "", "Client"]], "bailo.core.client.Client": [[0, 2, 1, "", "delete_access_request"], [0, 2, 1, "", "delete_file"], [0, 2, 1, "", "delete_release"], [0, 2, 1, "", "get_access_request"], [0, 2, 1, "", "get_access_requests"], [0, 2, 1, "", "get_all_images"], [0, 2, 1, "", "get_all_releases"], [0, 2, 1, "", "get_all_schemas"], [0, 2, 1, "", "get_all_teams"], [0, 2, 1, "", "get_download_file"], [0, 2, 1, "", "get_files"], [0, 2, 1, "", "get_model"], [0, 2, 1, "", "get_model_card"], [0, 2, 1, "", "get_model_roles"], [0, 2, 1, "", "get_model_user_roles"], [0, 2, 1, "", "get_models"], [0, 2, 1, "", "get_release"], [0, 2, 1, "", "get_reviews"], [0, 2, 1, "", "get_schema"], [0, 2, 1, "", "get_team"], [0, 2, 1, "", "get_user_teams"], [0, 2, 1, "", "model_card_from_schema"], [0, 2, 1, "", "patch_access_request"], [0, 2, 1, "", "patch_model"], [0, 2, 1, "", "patch_team"], [0, 2, 1, "", "post_access_request"], [0, 2, 1, "", "post_model"], [0, 2, 1, "", "post_release"], [0, 2, 1, "", "post_review"], [0, 2, 1, "", "post_schema"], [0, 2, 1, "", "post_team"], [0, 2, 1, "", "put_model_card"], [0, 2, 1, "", "put_release"], [0, 2, 1, "", "simple_upload"]], "bailo.core.enums": [[0, 1, 1, "", "ModelVisibility"], [0, 1, 1, "", "Role"], [0, 1, 1, "", "SchemaKind"]], "bailo.core.enums.ModelVisibility": [[0, 3, 1, "", "PRIVATE"], [0, 3, 1, "", "PUBLIC"]], "bailo.core.enums.Role": [[0, 3, 1, "", "MODEL_SENIOR_RESPONSABILITY_OFFICER"], [0, 3, 1, "", "MODEL_TECNICAL_REVIEWER"], [0, 3, 1, "", "OWNER"]], "bailo.core.enums.SchemaKind": [[0, 3, 1, "", "ACCESS_REQUEST"], [0, 3, 1, "", "MODEL"]], "bailo.core.exceptions": [[0, 4, 1, "", "BailoException"], [0, 4, 1, "", "ResponseException"]], "bailo.helper": [[1, 0, 0, "-", "access_request"], [1, 0, 0, "-", "model"], [1, 0, 0, "-", "release"], [1, 0, 0, "-", "schema"]], "bailo.helper.access_request": [[1, 1, 1, "", "AccessRequest"]], "bailo.helper.access_request.AccessRequest": [[1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "update"]], "bailo.helper.model": [[1, 1, 1, "", "Model"]], "bailo.helper.model.Model": [[1, 2, 1, "", "card_from_model"], [1, 2, 1, "", "card_from_schema"], [1, 2, 1, "", "card_from_template"], [1, 2, 1, "", "create"], [1, 2, 1, "", "create_release"], [1, 2, 1, "", "from_id"], [1, 2, 1, "", "get_card_latest"], [1, 2, 1, "", "get_card_revision"], [1, 2, 1, "", "get_image"], [1, 2, 1, "", "get_images"], [1, 2, 1, "", "get_latest_release"], [1, 2, 1, "", "get_release"], [1, 2, 1, "", "get_releases"], [1, 2, 1, "", "get_roles"], [1, 2, 1, "", "get_user_roles"], [1, 2, 1, "", "update"], [1, 2, 1, "", "update_model_card"]], "bailo.helper.release": [[1, 1, 1, "", "Release"]], "bailo.helper.release.Release": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "create"], [1, 2, 1, "", "delete"], [1, 2, 1, "", "download"], [1, 2, 1, "", "from_version"], [1, 2, 1, "", "update"], [1, 2, 1, "", "upload"]], "bailo.helper.schema": [[1, 1, 1, "", "Schema"]], "bailo.helper.schema.Schema": [[1, 2, 1, "", "create"], [1, 2, 1, "", "from_id"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "exception", "Python exception"]}, "titleterms": {"bailo": [0, 1, 2, 9], "core": 0, "packag": [0, 1, 2, 7, 9], "helper": 1, "welcom": 2, "": [2, 7], "python": [2, 7, 9], "client": [2, 9], "document": [2, 9], "notebook": 2, "manag": [3, 4, 5, 7], "access": [3, 7], "request": 3, "introduct": [3, 4, 5], "creat": [3, 4, 5, 7], "new": [3, 4, 5, 7], "retriev": [3, 4, 5], "an": [3, 4, 5, 7], "us": [3, 4, 5, 7], "from_id": [3, 4, 5], "method": [3, 4, 5, 7], "make": [3, 7], "chang": [3, 7], "delet": 3, "model": 4, "releas": 4, "updat": 4, "base": [4, 7], "popul": 4, "card": 4, "exist": [4, 5, 7], "upload": 4, "file": [4, 7], "schema": 5, "pre": 6, "commit": 6, "config": 6, "yaml": 6, "A": 7, "comma": 7, "separ": 7, "list": 7, "modul": 7, "name": 7, "from": 7, "where": 7, "c": 7, "extens": 7, "mai": 7, "load": 7, "ar": 7, "activ": 7, "interpret": 7, "run": 7, "arbitrari": 7, "code": 7, "add": [7, 9], "directori": 7, "blacklist": 7, "thei": 7, "should": 7, "path": 7, "match": 7, "regex": 7, "pattern": 7, "The": 7, "against": 7, "execut": 7, "usual": 7, "sy": 7, "manipul": 7, "pygtk": 7, "requir": 7, "multipl": 7, "process": 7, "speed": 7, "up": 7, "pylint": 7, "specifi": 7, "0": 7, "auto": 7, "detect": 7, "number": 7, "processor": 7, "avail": 7, "control": 7, "amount": 7, "potenti": 7, "infer": 7, "valu": 7, "when": 7, "singl": 7, "object": 7, "thi": 7, "can": 7, "help": 7, "perform": 7, "deal": 7, "larg": 7, "function": 7, "complex": 7, "nest": 7, "condit": 7, "plugin": 7, "regist": 7, "addit": 7, "checker": 7, "pickl": 7, "collect": 7, "data": 7, "later": 7, "comparison": 7, "configur": 7, "enabl": 7, "would": 7, "attempt": 7, "guess": 7, "common": 7, "misconfigur": 7, "emit": 7, "user": 7, "friendli": 7, "hint": 7, "instead": 7, "fals": 7, "posit": 7, "error": 7, "messag": 7, "allow": 7, "import": 7, "onli": 7, "show": 7, "warn": 7, "confid": 7, "level": 7, "leav": 7, "empti": 7, "all": 7, "valid": 7, "high": 7, "inference_failur": 7, "undefin": 7, "disabl": 7, "report": 7, "categori": 7, "given": 7, "id": 7, "you": 7, "either": 7, "give": 7, "identifi": 7, "put": 7, "option": 7, "time": 7, "command": 7, "line": 7, "appear": 7, "onc": 7, "also": 7, "everyth": 7, "first": 7, "reenabl": 7, "specif": 7, "check": 7, "For": 7, "exampl": 7, "want": 7, "similar": 7, "If": 7, "class": 7, "have": 7, "displai": 7, "w": 7, "see": 7, "express": 7, "which": 7, "return": 7, "score": 7, "less": 7, "than": 7, "equal": 7, "10": 7, "variabl": 7, "refactor": 7, "convent": 7, "contain": 7, "each": 7, "well": 7, "statement": 7, "i": 7, "total": 7, "analyz": 7, "global": 7, "evalu": 7, "rp0004": 7, "templat": 7, "style": 7, "format": 7, "string": 7, "inform": 7, "doc": 7, "detail": 7, "set": 7, "output": 7, "text": 7, "parseabl": 7, "color": 7, "json": 7, "msv": 7, "visual": 7, "studio": 7, "e": 7, "g": 7, "mypackag": 7, "mymodul": 7, "myreporterclass": 7, "tell": 7, "whether": 7, "full": 7, "maximum": 7, "block": 7, "bodi": 7, "complet": 7, "never": 7, "inconsist": 7, "call": 7, "consid": 7, "explicit": 7, "print": 7, "correct": 7, "argument": 7, "regular": 7, "overrid": 7, "attribut": 7, "attr": 7, "bad": 7, "alwai": 7, "refus": 7, "constant": 7, "const": 7, "minimum": 7, "length": 7, "docstr": 7, "shorter": 7, "ones": 7, "exempt": 7, "good": 7, "accept": 7, "includ": 7, "invalid": 7, "inlin": 7, "iter": 7, "inlinevar": 7, "colon": 7, "delimit": 7, "determin": 7, "other": 7, "sever": 7, "do": 7, "decor": 7, "produc": 7, "properti": 7, "abc": 7, "abstractproperti": 7, "These": 7, "taken": 7, "consider": 7, "expect": 7, "end": 7, "ani": 7, "lf": 7, "crlf": 7, "regexp": 7, "longer": 7, "limit": 7, "space": 7, "indent": 7, "insid": 7, "hang": 7, "continu": 7, "unit": 7, "4": 7, "t": 7, "1": 7, "tab": 7, "charact": 7, "construct": 7, "whitespac": 7, "dict": 7, "tabul": 7, "etc": 7, "n222": 7, "2": 7, "trail": 7, "between": 7, "close": 7, "bracket": 7, "same": 7, "declar": 7, "test": [7, 9], "els": 7, "log": 7, "old": 7, "mean": 7, "fstr": 7, "f": 7, "paramet": 7, "note": 7, "tag": 7, "take": 7, "ignor": 7, "comment": 7, "comput": 7, "count": 7, "suggest": 7, "spell": 7, "mistak": 7, "dictionari": 7, "none": 7, "To": 7, "work": 7, "instal": [7, 9], "enchant": 7, "word": 7, "privat": 7, "one": 7, "per": 7, "store": 7, "unknown": 7, "rais": 7, "flag": 7, "implicit": 7, "str": 7, "concat": 7, "sequenc": 7, "gener": 7, "concaten": 7, "defin": 7, "over": 7, "context": 7, "contextlib": 7, "contextmanag": 7, "member": 7, "dynam": 7, "miss": 7, "system": 7, "so": 7, "shouldn": 7, "trigger": 7, "e1101": 7, "mixin": 7, "its": 7, "case": 7, "insensit": 7, "about": 7, "owner": 7, "whenev": 7, "opaqu": 7, "result": 7, "while": 7, "some": 7, "branch": 7, "might": 7, "partial": 7, "In": 7, "still": 7, "rest": 7, "support": 7, "qualifi": 7, "project": 7, "namespac": 7, "dure": 7, "runtim": 7, "thu": 7, "cannot": 7, "deduc": 7, "static": 7, "analysi": 7, "It": 7, "unix": 7, "possibl": 7, "wa": 7, "found": 7, "aspect": 7, "find": 7, "edit": 7, "distanc": 7, "order": 7, "signatur": 7, "suppos": 7, "builtin": 7, "rememb": 7, "avoid": 7, "unus": 7, "treat": 7, "violat": 7, "callback": 7, "must": 7, "start": [7, 9], "those": 7, "dummi": 7, "default": 7, "lead": 7, "underscor": 7, "we": 7, "init": 7, "redefin": 7, "assign": 7, "instanc": 7, "exclud": 7, "protect": 7, "metaclass": 7, "r0902": 7, "boolean": 7, "r0916": 7, "local": [7, 9], "parent": 7, "r0901": 7, "public": 7, "r0904": 7, "yield": 7, "r0903": 7, "just": 7, "top": 7, "wildcard": 7, "analys": 7, "fallback": 7, "both": 7, "3": 7, "compat": 7, "anoth": 7, "deprec": 7, "graph": 7, "extern": 7, "depend": 7, "rp0402": 7, "everi": 7, "intern": 7, "forc": 7, "recogn": 7, "part": 7, "standard": 7, "librari": 7, "third": 7, "parti": 7, "coupl": 7, "prefer": 7, "except": 7, "being": 7, "caught": 7, "baseexcept": 7, "pypyroject": 8, "toml": 8, "kei": 9, "featur": 9, "get": 9, "build": 9, "develop": 9, "precommit": 9}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"bailo.core package": [[0, "bailo-core-package"]], "bailo.helper package": [[1, "module-bailo.helper.access_request"]], "Welcome to Bailo\u2019s Python Client documentation!": [[2, "module-bailo"]], "Bailo Python Client": [[2, "bailo-python-client"], [9, "bailo-python-client"]], "Packages:": [[2, null]], "Notebooks:": [[2, null]], "Managing Access Requests": [[3, "Managing-Access-Requests"]], "Introduction": [[3, "Introduction"], [4, "Introduction"], [5, "Introduction"]], "Creating a new access request": [[3, "Creating-a-new-access-request"]], "Retrieving an access request": [[3, "Retrieving-an-access-request"]], "Using the .from_id() method": [[3, "Using-the-.from_id()-method"], [4, "Using-the-.from_id()-method"], [5, "Using-the-.from_id()-method"]], "Making changes to an access request": [[3, "Making-changes-to-an-access-request"]], "Deleting an access request": [[3, "Deleting-an-access-request"]], "Managing Models & Releases": [[4, "Managing-Models-&-Releases"]], "Creating a new model": [[4, "Creating-a-new-model"]], "Creating and updating the base model": [[4, "Creating-and-updating-the-base-model"]], "Creating and populating a model card": [[4, "Creating-and-populating-a-model-card"]], "Retrieving an existing model": [[4, "Retrieving-an-existing-model"]], "Creating and managing releases for models": [[4, "Creating-and-managing-releases-for-models"]], "Creating a release": [[4, "Creating-a-release"]], "Uploading files to a release": [[4, "Uploading-files-to-a-release"]], "Retrieving a release": [[4, "Retrieving-a-release"]], "Managing Schemas": [[5, "Managing-Schemas"]], "Creating a new schema": [[5, "Creating-a-new-schema"]], "Retrieving an existing schema": [[5, "Retrieving-an-existing-schema"]], "pre-commit-config.yaml": [[6, "pre-commit-config-yaml"]], "A comma-separated list of package or module names from where C extensions may": [[7, "a-comma-separated-list-of-package-or-module-names-from-where-c-extensions-may"]], "be loaded. Extensions are loading into the active Python interpreter and may": [[7, "be-loaded-extensions-are-loading-into-the-active-python-interpreter-and-may"]], "run arbitrary code.": [[7, "run-arbitrary-code"]], "Add files or directories to the blacklist. They should be base names, not": [[7, "add-files-or-directories-to-the-blacklist-they-should-be-base-names-not"]], "paths.": [[7, "paths"]], "Add files or directories matching the regex patterns to the blacklist. The": [[7, "add-files-or-directories-matching-the-regex-patterns-to-the-blacklist-the"]], "regex matches against base names, not paths.": [[7, "regex-matches-against-base-names-not-paths"]], "Python code to execute, usually for sys.path manipulation such as": [[7, "python-code-to-execute-usually-for-sys-path-manipulation-such-as"]], "pygtk.require().": [[7, "pygtk-require"]], "Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the": [[7, "use-multiple-processes-to-speed-up-pylint-specifying-0-will-auto-detect-the"]], "number of processors available to use.": [[7, "number-of-processors-available-to-use"]], "Control the amount of potential inferred values when inferring a single": [[7, "control-the-amount-of-potential-inferred-values-when-inferring-a-single"]], "object. This can help the performance when dealing with large functions or": [[7, "object-this-can-help-the-performance-when-dealing-with-large-functions-or"]], "complex, nested conditions.": [[7, "complex-nested-conditions"]], "List of plugins (as comma separated values of python module names) to load,": [[7, "list-of-plugins-as-comma-separated-values-of-python-module-names-to-load"]], "usually to register additional checkers.": [[7, "usually-to-register-additional-checkers"]], "Pickle collected data for later comparisons.": [[7, "pickle-collected-data-for-later-comparisons"]], "Specify a configuration file.": [[7, "specify-a-configuration-file"]], "When enabled, pylint would attempt to guess common misconfiguration and emit": [[7, "when-enabled-pylint-would-attempt-to-guess-common-misconfiguration-and-emit"]], "user-friendly hints instead of false-positive error messages.": [[7, "user-friendly-hints-instead-of-false-positive-error-messages"]], "Allow loading of arbitrary C extensions. Extensions are imported into the": [[7, "allow-loading-of-arbitrary-c-extensions-extensions-are-imported-into-the"]], "active Python interpreter and may run arbitrary code.": [[7, "active-python-interpreter-and-may-run-arbitrary-code"]], "Only show warnings with the listed confidence levels. Leave empty to show": [[7, "only-show-warnings-with-the-listed-confidence-levels-leave-empty-to-show"]], "all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED.": [[7, "all-valid-levels-high-inference-inference-failure-undefined"]], "Disable the message, report, category or checker with the given id(s). You": [[7, "disable-the-message-report-category-or-checker-with-the-given-id-s-you"]], "can either give multiple identifiers separated by comma (,) or put this": [[7, "can-either-give-multiple-identifiers-separated-by-comma-or-put-this"]], "option multiple times (only on the command line, not in the configuration": [[7, "option-multiple-times-only-on-the-command-line-not-in-the-configuration"]], "file where it should appear only once). You can also use \u201c\u2013disable=all\u201d to": [[7, "file-where-it-should-appear-only-once-you-can-also-use-disable-all-to"]], "disable everything first and then reenable specific checks. For example, if": [[7, "disable-everything-first-and-then-reenable-specific-checks-for-example-if"]], "you want to run only the similarities checker, you can use \u201c\u2013disable=all": [[7, "you-want-to-run-only-the-similarities-checker-you-can-use-disable-all"]], "\u2013enable=similarities\u201d. If you want to run only the classes checker, but have": [[7, "enable-similarities-if-you-want-to-run-only-the-classes-checker-but-have"]], "no Warning level messages displayed, use \u201c\u2013disable=all \u2013enable=classes": [[7, "no-warning-level-messages-displayed-use-disable-all-enable-classes"]], "\u2013disable=W\u201d.": [[7, "disable-w"]], "Enable the message, report, category or checker with the given id(s). You can": [[7, "enable-the-message-report-category-or-checker-with-the-given-id-s-you-can"]], "either give multiple identifier separated by comma (,) or put this option": [[7, "either-give-multiple-identifier-separated-by-comma-or-put-this-option"]], "multiple time (only on the command line, not in the configuration file where": [[7, "multiple-time-only-on-the-command-line-not-in-the-configuration-file-where"]], "it should appear only once). See also the \u201c\u2013disable\u201d option for examples.": [[7, "it-should-appear-only-once-see-also-the-disable-option-for-examples"]], "Python expression which should return a score less than or equal to 10. You": [[7, "python-expression-which-should-return-a-score-less-than-or-equal-to-10-you"]], "have access to the variables \u2018error\u2019, \u2018warning\u2019, \u2018refactor\u2019, and \u2018convention\u2019": [[7, "have-access-to-the-variables-error-warning-refactor-and-convention"]], "which contain the number of messages in each category, as well as \u2018statement\u2019": [[7, "which-contain-the-number-of-messages-in-each-category-as-well-as-statement"]], "which is the total number of statements analyzed. This score is used by the": [[7, "which-is-the-total-number-of-statements-analyzed-this-score-is-used-by-the"]], "global evaluation report (RP0004).": [[7, "global-evaluation-report-rp0004"]], "Template used to display messages. This is a python new-style format string": [[7, "template-used-to-display-messages-this-is-a-python-new-style-format-string"]], "used to format the message information. See doc for all details.": [[7, "used-to-format-the-message-information-see-doc-for-all-details"]], "Set the output format. Available formats are text, parseable, colorized, json": [[7, "set-the-output-format-available-formats-are-text-parseable-colorized-json"]], "and msvs (visual studio). You can also give a reporter class, e.g.": [[7, "and-msvs-visual-studio-you-can-also-give-a-reporter-class-e-g"]], "mypackage.mymodule.MyReporterClass.": [[7, "mypackage-mymodule-myreporterclass"]], "Tells whether to display a full report or only the messages.": [[7, "tells-whether-to-display-a-full-report-or-only-the-messages"]], "Activate the evaluation score.": [[7, "activate-the-evaluation-score"]], "Maximum number of nested blocks for function / method body": [[7, "maximum-number-of-nested-blocks-for-function-method-body"]], "Complete name of functions that never returns. When checking for": [[7, "complete-name-of-functions-that-never-returns-when-checking-for"]], "inconsistent-return-statements if a never returning function is called then": [[7, "inconsistent-return-statements-if-a-never-returning-function-is-called-then"]], "it will be considered as an explicit return statement and no message will be": [[7, "it-will-be-considered-as-an-explicit-return-statement-and-no-message-will-be"]], "printed.": [[7, "printed"]], "Naming style matching correct argument names.": [[7, "naming-style-matching-correct-argument-names"]], "Regular expression matching correct argument names. Overrides argument-": [[7, "regular-expression-matching-correct-argument-names-overrides-argument"]], "naming-style.": [[7, "naming-style"], [7, "id3"], [7, "id6"]], "Naming style matching correct attribute names.": [[7, "naming-style-matching-correct-attribute-names"]], "Regular expression matching correct attribute names. Overrides attr-naming-": [[7, "regular-expression-matching-correct-attribute-names-overrides-attr-naming"]], "style.": [[7, "style"], [7, "id1"], [7, "id2"], [7, "id4"], [7, "id5"]], "Bad variable names which should always be refused, separated by a comma.": [[7, "bad-variable-names-which-should-always-be-refused-separated-by-a-comma"]], "Naming style matching correct class attribute names.": [[7, "naming-style-matching-correct-class-attribute-names"]], "Regular expression matching correct class attribute names. Overrides class-": [[7, "regular-expression-matching-correct-class-attribute-names-overrides-class"]], "attribute-naming-style.": [[7, "attribute-naming-style"]], "Naming style matching correct class names.": [[7, "naming-style-matching-correct-class-names"]], "Regular expression matching correct class names. Overrides class-naming-": [[7, "regular-expression-matching-correct-class-names-overrides-class-naming"]], "Naming style matching correct constant names.": [[7, "naming-style-matching-correct-constant-names"]], "Regular expression matching correct constant names. Overrides const-naming-": [[7, "regular-expression-matching-correct-constant-names-overrides-const-naming"]], "Minimum line length for functions/classes that require docstrings, shorter": [[7, "minimum-line-length-for-functions-classes-that-require-docstrings-shorter"]], "ones are exempt.": [[7, "ones-are-exempt"]], "Naming style matching correct function names.": [[7, "naming-style-matching-correct-function-names"]], "Regular expression matching correct function names. Overrides function-": [[7, "regular-expression-matching-correct-function-names-overrides-function"]], "Good variable names which should always be accepted, separated by a comma.": [[7, "good-variable-names-which-should-always-be-accepted-separated-by-a-comma"]], "Include a hint for the correct naming format with invalid-name.": [[7, "include-a-hint-for-the-correct-naming-format-with-invalid-name"]], "Naming style matching correct inline iteration names.": [[7, "naming-style-matching-correct-inline-iteration-names"]], "Regular expression matching correct inline iteration names. Overrides": [[7, "regular-expression-matching-correct-inline-iteration-names-overrides"]], "inlinevar-naming-style.": [[7, "inlinevar-naming-style"]], "Naming style matching correct method names.": [[7, "naming-style-matching-correct-method-names"]], "Regular expression matching correct method names. Overrides method-naming-": [[7, "regular-expression-matching-correct-method-names-overrides-method-naming"]], "Naming style matching correct module names.": [[7, "naming-style-matching-correct-module-names"]], "Regular expression matching correct module names. Overrides module-naming-": [[7, "regular-expression-matching-correct-module-names-overrides-module-naming"]], "Colon-delimited sets of names that determine each other\u2019s naming style when": [[7, "colon-delimited-sets-of-names-that-determine-each-other-s-naming-style-when"]], "the name regexes allow several styles.": [[7, "the-name-regexes-allow-several-styles"]], "Regular expression which should only match function or class names that do": [[7, "regular-expression-which-should-only-match-function-or-class-names-that-do"]], "not require a docstring.": [[7, "not-require-a-docstring"]], "List of decorators that produce properties, such as abc.abstractproperty. Add": [[7, "list-of-decorators-that-produce-properties-such-as-abc-abstractproperty-add"]], "to this list to register other decorators that produce valid properties.": [[7, "to-this-list-to-register-other-decorators-that-produce-valid-properties"]], "These decorators are taken in consideration only for invalid-name.": [[7, "these-decorators-are-taken-in-consideration-only-for-invalid-name"]], "Naming style matching correct variable names.": [[7, "naming-style-matching-correct-variable-names"]], "Regular expression matching correct variable names. Overrides variable-": [[7, "regular-expression-matching-correct-variable-names-overrides-variable"]], "Expected format of line ending, e.g. empty (any line ending), LF or CRLF.": [[7, "expected-format-of-line-ending-e-g-empty-any-line-ending-lf-or-crlf"]], "Regexp for a line that is allowed to be longer than the limit.": [[7, "regexp-for-a-line-that-is-allowed-to-be-longer-than-the-limit"]], "Number of spaces of indent required inside a hanging or continued line.": [[7, "number-of-spaces-of-indent-required-inside-a-hanging-or-continued-line"]], "String used as indentation unit. This is usually \u201c    \u201c (4 spaces) or \u201c\\t\u201d (1": [[7, "string-used-as-indentation-unit-this-is-usually-4-spaces-or-t-1"]], "tab).": [[7, "tab"]], "Maximum number of characters on a single line.": [[7, "maximum-number-of-characters-on-a-single-line"]], "Maximum number of lines in a module.": [[7, "maximum-number-of-lines-in-a-module"]], "List of optional constructs for which whitespace checking is disabled. `dict-": [[7, "list-of-optional-constructs-for-which-whitespace-checking-is-disabled-dict"]], "separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.": [[7, "separator-is-used-to-allow-tabulation-in-dicts-etc-1-1-n222-2"]], "trailing-comma allows a space between comma and closing bracket: (a, ).": [[7, "trailing-comma-allows-a-space-between-comma-and-closing-bracket-a"]], "empty-line allows space-only lines.": [[7, "empty-line-allows-space-only-lines"]], "Allow the body of a class to be on the same line as the declaration if body": [[7, "allow-the-body-of-a-class-to-be-on-the-same-line-as-the-declaration-if-body"]], "contains single statement.": [[7, "contains-single-statement"]], "Allow the body of an if to be on the same line as the test if there is no": [[7, "allow-the-body-of-an-if-to-be-on-the-same-line-as-the-test-if-there-is-no"]], "else.": [[7, "else"]], "Format style used to check logging format string. old means using %": [[7, "format-style-used-to-check-logging-format-string-old-means-using"]], "formatting, new is for {} formatting,and fstr is for f-strings.": [[7, "formatting-new-is-for-formatting-and-fstr-is-for-f-strings"]], "Logging modules to check that the string format arguments are in logging": [[7, "logging-modules-to-check-that-the-string-format-arguments-are-in-logging"]], "function parameter format.": [[7, "function-parameter-format"]], "List of note tags to take in consideration, separated by a comma.": [[7, "list-of-note-tags-to-take-in-consideration-separated-by-a-comma"]], "Ignore comments when computing similarities.": [[7, "ignore-comments-when-computing-similarities"]], "Ignore docstrings when computing similarities.": [[7, "ignore-docstrings-when-computing-similarities"]], "Ignore imports when computing similarities.": [[7, "ignore-imports-when-computing-similarities"]], "Minimum lines number of a similarity.": [[7, "minimum-lines-number-of-a-similarity"]], "Limits count of emitted suggestions for spelling mistakes.": [[7, "limits-count-of-emitted-suggestions-for-spelling-mistakes"]], "Spelling dictionary name. Available dictionaries: none. To make it work,": [[7, "spelling-dictionary-name-available-dictionaries-none-to-make-it-work"]], "install the python-enchant package.": [[7, "install-the-python-enchant-package"]], "List of comma separated words that should not be checked.": [[7, "list-of-comma-separated-words-that-should-not-be-checked"]], "A path to a file that contains the private dictionary; one word per line.": [[7, "a-path-to-a-file-that-contains-the-private-dictionary-one-word-per-line"]], "Tells whether to store unknown words to the private dictionary (see the": [[7, "tells-whether-to-store-unknown-words-to-the-private-dictionary-see-the"]], "\u2013spelling-private-dict-file option) instead of raising a message.": [[7, "spelling-private-dict-file-option-instead-of-raising-a-message"]], "This flag controls whether the implicit-str-concat-in-sequence should": [[7, "this-flag-controls-whether-the-implicit-str-concat-in-sequence-should"]], "generate a warning on implicit string concatenation in sequences defined over": [[7, "generate-a-warning-on-implicit-string-concatenation-in-sequences-defined-over"]], "several lines.": [[7, "several-lines"]], "List of decorators that produce context managers, such as": [[7, "list-of-decorators-that-produce-context-managers-such-as"]], "contextlib.contextmanager. Add to this list to register other decorators that": [[7, "contextlib-contextmanager-add-to-this-list-to-register-other-decorators-that"]], "produce valid context managers.": [[7, "produce-valid-context-managers"]], "List of members which are set dynamically and missed by pylint inference": [[7, "list-of-members-which-are-set-dynamically-and-missed-by-pylint-inference"]], "system, and so shouldn\u2019t trigger E1101 when accessed. Python regular": [[7, "system-and-so-shouldn-t-trigger-e1101-when-accessed-python-regular"]], "expressions are accepted.": [[7, "expressions-are-accepted"]], "Tells whether missing members accessed in mixin class should be ignored. A": [[7, "tells-whether-missing-members-accessed-in-mixin-class-should-be-ignored-a"]], "mixin class is detected if its name ends with \u201cmixin\u201d (case insensitive).": [[7, "mixin-class-is-detected-if-its-name-ends-with-mixin-case-insensitive"]], "Tells whether to warn about missing members when the owner of the attribute": [[7, "tells-whether-to-warn-about-missing-members-when-the-owner-of-the-attribute"]], "is inferred to be None.": [[7, "is-inferred-to-be-none"]], "This flag controls whether pylint should warn about no-member and similar": [[7, "this-flag-controls-whether-pylint-should-warn-about-no-member-and-similar"]], "checks whenever an opaque object is returned when inferring. The inference": [[7, "checks-whenever-an-opaque-object-is-returned-when-inferring-the-inference"]], "can return multiple potential results while evaluating a Python object, but": [[7, "can-return-multiple-potential-results-while-evaluating-a-python-object-but"]], "some branches might not be evaluated, which results in partial inference. In": [[7, "some-branches-might-not-be-evaluated-which-results-in-partial-inference-in"]], "that case, it might be useful to still emit no-member and other checks for": [[7, "that-case-it-might-be-useful-to-still-emit-no-member-and-other-checks-for"]], "the rest of the inferred objects.": [[7, "the-rest-of-the-inferred-objects"]], "List of class names for which member attributes should not be checked (useful": [[7, "list-of-class-names-for-which-member-attributes-should-not-be-checked-useful"]], "for classes with dynamically set attributes). This supports the use of": [[7, "for-classes-with-dynamically-set-attributes-this-supports-the-use-of"]], "qualified names.": [[7, "qualified-names"]], "List of module names for which member attributes should not be checked": [[7, "list-of-module-names-for-which-member-attributes-should-not-be-checked"]], "(useful for modules/projects where namespaces are manipulated during runtime": [[7, "useful-for-modules-projects-where-namespaces-are-manipulated-during-runtime"]], "and thus existing member attributes cannot be deduced by static analysis). It": [[7, "and-thus-existing-member-attributes-cannot-be-deduced-by-static-analysis-it"]], "supports qualified module names, as well as Unix pattern matching.": [[7, "supports-qualified-module-names-as-well-as-unix-pattern-matching"]], "Show a hint with possible names when a member name was not found. The aspect": [[7, "show-a-hint-with-possible-names-when-a-member-name-was-not-found-the-aspect"]], "of finding the hint is based on edit distance.": [[7, "of-finding-the-hint-is-based-on-edit-distance"]], "The minimum edit distance a name should have in order to be considered a": [[7, "the-minimum-edit-distance-a-name-should-have-in-order-to-be-considered-a"]], "similar match for a missing member name.": [[7, "similar-match-for-a-missing-member-name"]], "The total number of similar names that should be taken in consideration when": [[7, "the-total-number-of-similar-names-that-should-be-taken-in-consideration-when"]], "showing a hint for a missing member.": [[7, "showing-a-hint-for-a-missing-member"]], "List of decorators that change the signature of a decorated function.": [[7, "list-of-decorators-that-change-the-signature-of-a-decorated-function"]], "List of additional names supposed to be defined in builtins. Remember that": [[7, "list-of-additional-names-supposed-to-be-defined-in-builtins-remember-that"]], "you should avoid defining new builtins when possible.": [[7, "you-should-avoid-defining-new-builtins-when-possible"]], "Tells whether unused global variables should be treated as a violation.": [[7, "tells-whether-unused-global-variables-should-be-treated-as-a-violation"]], "List of strings which can identify a callback function by name. A callback": [[7, "list-of-strings-which-can-identify-a-callback-function-by-name-a-callback"]], "name must start or end with one of those strings.": [[7, "name-must-start-or-end-with-one-of-those-strings"]], "A regular expression matching the name of dummy variables (i.e. expected to": [[7, "a-regular-expression-matching-the-name-of-dummy-variables-i-e-expected-to"]], "not be used).": [[7, "not-be-used"]], "Argument names that match this expression will be ignored. Default to name": [[7, "argument-names-that-match-this-expression-will-be-ignored-default-to-name"]], "with leading underscore.": [[7, "with-leading-underscore"]], "Tells whether we should check for unused import in init files.": [[7, "tells-whether-we-should-check-for-unused-import-in-init-files"]], "List of qualified module names which can have objects that can redefine": [[7, "list-of-qualified-module-names-which-can-have-objects-that-can-redefine"]], "builtins.": [[7, "builtins"]], "List of method names used to declare (i.e. assign) instance attributes.": [[7, "list-of-method-names-used-to-declare-i-e-assign-instance-attributes"]], "List of member names, which should be excluded from the protected access": [[7, "list-of-member-names-which-should-be-excluded-from-the-protected-access"]], "warning.": [[7, "warning"]], "List of valid names for the first argument in a class method.": [[7, "list-of-valid-names-for-the-first-argument-in-a-class-method"]], "List of valid names for the first argument in a metaclass class method.": [[7, "list-of-valid-names-for-the-first-argument-in-a-metaclass-class-method"]], "Maximum number of arguments for function / method.": [[7, "maximum-number-of-arguments-for-function-method"]], "Maximum number of attributes for a class (see R0902).": [[7, "maximum-number-of-attributes-for-a-class-see-r0902"]], "Maximum number of boolean expressions in an if statement (see R0916).": [[7, "maximum-number-of-boolean-expressions-in-an-if-statement-see-r0916"]], "Maximum number of branch for function / method body.": [[7, "maximum-number-of-branch-for-function-method-body"]], "Maximum number of locals for function / method body.": [[7, "maximum-number-of-locals-for-function-method-body"]], "Maximum number of parents for a class (see R0901).": [[7, "maximum-number-of-parents-for-a-class-see-r0901"]], "Maximum number of public methods for a class (see R0904).": [[7, "maximum-number-of-public-methods-for-a-class-see-r0904"]], "Maximum number of return / yield for function / method body.": [[7, "maximum-number-of-return-yield-for-function-method-body"]], "Maximum number of statements in function / method body.": [[7, "maximum-number-of-statements-in-function-method-body"]], "Minimum number of public methods for a class (see R0903).": [[7, "minimum-number-of-public-methods-for-a-class-see-r0903"]], "List of modules that can be imported at any level, not just the top level": [[7, "list-of-modules-that-can-be-imported-at-any-level-not-just-the-top-level"]], "one.": [[7, "one"]], "Allow wildcard imports from modules that define all.": [[7, "allow-wildcard-imports-from-modules-that-define-all"]], "Analyse import fallback blocks. This can be used to support both Python 2 and": [[7, "analyse-import-fallback-blocks-this-can-be-used-to-support-both-python-2-and"]], "3 compatible code, which means that the block might have code that exists": [[7, "compatible-code-which-means-that-the-block-might-have-code-that-exists"]], "only in one or another interpreter, leading to false positives when analysed.": [[7, "only-in-one-or-another-interpreter-leading-to-false-positives-when-analysed"]], "Deprecated modules which should not be used, separated by a comma.": [[7, "deprecated-modules-which-should-not-be-used-separated-by-a-comma"]], "Create a graph of external dependencies in the given file (report RP0402 must": [[7, "create-a-graph-of-external-dependencies-in-the-given-file-report-rp0402-must"]], "not be disabled).": [[7, "not-be-disabled"], [7, "id7"]], "Create a graph of every (i.e. internal and external) dependencies in the": [[7, "create-a-graph-of-every-i-e-internal-and-external-dependencies-in-the"]], "given file (report RP0402 must not be disabled).": [[7, "given-file-report-rp0402-must-not-be-disabled"]], "Create a graph of internal dependencies in the given file (report RP0402 must": [[7, "create-a-graph-of-internal-dependencies-in-the-given-file-report-rp0402-must"]], "Force import order to recognize a module as part of the standard": [[7, "force-import-order-to-recognize-a-module-as-part-of-the-standard"]], "compatibility libraries.": [[7, "compatibility-libraries"]], "Force import order to recognize a module as part of a third party library.": [[7, "force-import-order-to-recognize-a-module-as-part-of-a-third-party-library"]], "Couples of modules and preferred modules, separated by a comma.": [[7, "couples-of-modules-and-preferred-modules-separated-by-a-comma"]], "Exceptions that will emit a warning when being caught. Defaults to": [[7, "exceptions-that-will-emit-a-warning-when-being-caught-defaults-to"]], "\u201cBaseException, Exception\u201d.": [[7, "baseexception-exception"]], "pypyroject.toml": [[8, "pypyroject-toml"]], "Key Features": [[9, "key-features"]], "Installing": [[9, "installing"]], "Getting Started": [[9, "getting-started"]], "Documentation": [[9, "documentation"]], "Building locally": [[9, "building-locally"]], "Development": [[9, "development"]], "Install and add precommit": [[9, "install-and-add-precommit"]], "Install the package locally": [[9, "install-the-package-locally"]], "Testing": [[9, "testing"]]}, "indexentries": {"access_request (bailo.core.enums.schemakind attribute)": [[0, "bailo.core.enums.SchemaKind.ACCESS_REQUEST"]], "agent (class in bailo.core.agent)": [[0, "bailo.core.agent.Agent"]], "bailoexception": [[0, "bailo.core.exceptions.BailoException"]], "client (class in bailo.core.client)": [[0, "bailo.core.client.Client"]], "model (bailo.core.enums.schemakind attribute)": [[0, "bailo.core.enums.SchemaKind.MODEL"]], "model_senior_responsability_officer (bailo.core.enums.role attribute)": [[0, "bailo.core.enums.Role.MODEL_SENIOR_RESPONSABILITY_OFFICER"]], "model_tecnical_reviewer (bailo.core.enums.role attribute)": [[0, "bailo.core.enums.Role.MODEL_TECNICAL_REVIEWER"]], "modelvisibility (class in bailo.core.enums)": [[0, "bailo.core.enums.ModelVisibility"]], "owner (bailo.core.enums.role attribute)": [[0, "bailo.core.enums.Role.OWNER"]], "private (bailo.core.enums.modelvisibility attribute)": [[0, "bailo.core.enums.ModelVisibility.PRIVATE"]], "public (bailo.core.enums.modelvisibility attribute)": [[0, "bailo.core.enums.ModelVisibility.PUBLIC"]], "pkiagent (class in bailo.core.agent)": [[0, "bailo.core.agent.PkiAgent"]], "responseexception": [[0, "bailo.core.exceptions.ResponseException"]], "role (class in bailo.core.enums)": [[0, "bailo.core.enums.Role"]], "schemakind (class in bailo.core.enums)": [[0, "bailo.core.enums.SchemaKind"]], "tokenagent (class in bailo.core.agent)": [[0, "bailo.core.agent.TokenAgent"]], "__init__() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.__init__"]], "__init__() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.__init__"]], "bailo.core.agent": [[0, "module-bailo.core.agent"]], "bailo.core.client": [[0, "module-bailo.core.client"]], "bailo.core.enums": [[0, "module-bailo.core.enums"]], "bailo.core.exceptions": [[0, "module-bailo.core.exceptions"]], "delete() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.delete"]], "delete() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.delete"]], "delete() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.delete"]], "delete_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.delete_access_request"]], "delete_file() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.delete_file"]], "delete_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.delete_release"]], "get() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.get"]], "get() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.get"]], "get() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.get"]], "get_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_access_request"]], "get_access_requests() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_access_requests"]], "get_all_images() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_images"]], "get_all_releases() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_releases"]], "get_all_schemas() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_schemas"]], "get_all_teams() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_all_teams"]], "get_download_file() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_download_file"]], "get_files() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_files"]], "get_model() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model"]], "get_model_card() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model_card"]], "get_model_roles() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model_roles"]], "get_model_user_roles() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_model_user_roles"]], "get_models() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_models"]], "get_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_release"]], "get_reviews() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_reviews"]], "get_schema() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_schema"]], "get_team() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_team"]], "get_user_teams() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.get_user_teams"]], "model_card_from_schema() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.model_card_from_schema"]], "module": [[0, "module-bailo.core.agent"], [0, "module-bailo.core.client"], [0, "module-bailo.core.enums"], [0, "module-bailo.core.exceptions"], [1, "module-bailo.helper.access_request"], [1, "module-bailo.helper.model"], [1, "module-bailo.helper.release"], [1, "module-bailo.helper.schema"], [2, "module-bailo"]], "patch() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.patch"]], "patch() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.patch"]], "patch() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.patch"]], "patch_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.patch_access_request"]], "patch_model() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.patch_model"]], "patch_team() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.patch_team"]], "post() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.post"]], "post() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.post"]], "post() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.post"]], "post_access_request() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_access_request"]], "post_model() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_model"]], "post_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_release"]], "post_review() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_review"]], "post_schema() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_schema"]], "post_team() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.post_team"]], "push() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.push"]], "put() (bailo.core.agent.agent method)": [[0, "bailo.core.agent.Agent.put"]], "put() (bailo.core.agent.pkiagent method)": [[0, "bailo.core.agent.PkiAgent.put"]], "put() (bailo.core.agent.tokenagent method)": [[0, "bailo.core.agent.TokenAgent.put"]], "put_model_card() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.put_model_card"]], "put_release() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.put_release"]], "simple_upload() (bailo.core.client.client method)": [[0, "bailo.core.client.Client.simple_upload"]], "accessrequest (class in bailo.helper.access_request)": [[1, "bailo.helper.access_request.AccessRequest"]], "model (class in bailo.helper.model)": [[1, "bailo.helper.model.Model"]], "release (class in bailo.helper.release)": [[1, "bailo.helper.release.Release"]], "schema (class in bailo.helper.schema)": [[1, "bailo.helper.schema.Schema"]], "__init__() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.__init__"]], "bailo.helper.access_request": [[1, "module-bailo.helper.access_request"]], "bailo.helper.model": [[1, "module-bailo.helper.model"]], "bailo.helper.release": [[1, "module-bailo.helper.release"]], "bailo.helper.schema": [[1, "module-bailo.helper.schema"]], "card_from_model() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.card_from_model"]], "card_from_schema() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.card_from_schema"]], "card_from_template() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.card_from_template"]], "create() (bailo.helper.access_request.accessrequest class method)": [[1, "bailo.helper.access_request.AccessRequest.create"]], "create() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.create"]], "create() (bailo.helper.release.release class method)": [[1, "bailo.helper.release.Release.create"]], "create() (bailo.helper.schema.schema class method)": [[1, "bailo.helper.schema.Schema.create"]], "create_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.create_release"]], "delete() (bailo.helper.access_request.accessrequest method)": [[1, "bailo.helper.access_request.AccessRequest.delete"]], "delete() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.delete"]], "download() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.download"]], "from_id() (bailo.helper.access_request.accessrequest class method)": [[1, "bailo.helper.access_request.AccessRequest.from_id"]], "from_id() (bailo.helper.model.model class method)": [[1, "bailo.helper.model.Model.from_id"]], "from_id() (bailo.helper.schema.schema class method)": [[1, "bailo.helper.schema.Schema.from_id"]], "from_version() (bailo.helper.release.release class method)": [[1, "bailo.helper.release.Release.from_version"]], "get_card_latest() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_card_latest"]], "get_card_revision() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_card_revision"]], "get_image() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_image"]], "get_images() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_images"]], "get_latest_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_latest_release"]], "get_release() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_release"]], "get_releases() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_releases"]], "get_roles() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_roles"]], "get_user_roles() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.get_user_roles"]], "update() (bailo.helper.access_request.accessrequest method)": [[1, "bailo.helper.access_request.AccessRequest.update"]], "update() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.update"]], "update() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.update"]], "update_model_card() (bailo.helper.model.model method)": [[1, "bailo.helper.model.Model.update_model_card"]], "upload() (bailo.helper.release.release method)": [[1, "bailo.helper.release.Release.upload"]], "bailo": [[2, "module-bailo"]]}})